<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[尚卫民的博客]]></title>
  <link href="http://cloay.com/atom.xml" rel="self"/>
  <link href="http://cloay.com/"/>
  <updated>2018-07-20T21:07:58+08:00</updated>
  <id>http://cloay.com/</id>
  <author>
    <name><![CDATA[Weimin]]></name>
    <email><![CDATA[shangrody@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Swift隐式可选类型的前世今生]]></title>
    <link href="http://cloay.com/blog/2018/07/18/swiftyin-shi-ke-xuan-lei-xing-de-qian-shi-jin-sheng/"/>
    <updated>2018-07-18T10:40:00+08:00</updated>
    <id>http://cloay.com/blog/2018/07/18/swiftyin-shi-ke-xuan-lei-xing-de-qian-shi-jin-sheng</id>
    <content type="html"><![CDATA[<h3>Swift隐式可选类型的前世今生</h3>

<h4>一、什么是隐式可选类型</h4>

<p>在介绍隐式可选类型之前，我们先看看什么可选类型。在Swift中可选类型用来处理值可能不存在的情况，可选类型的意思是值可能有，也可能没有。我们看一个例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="n">possibleNumber</span> <span class="o">=</span> <span class="s">&quot;123&quot;</span>
</span><span class='line'><span class="n">let</span> <span class="n">convertedNumber</span> <span class="o">=</span> <span class="n">Int</span><span class="p">(</span><span class="n">possibleNumber</span><span class="p">)</span>
</span><span class='line'><span class="c1">// convertedNumber 被推测为类型 &quot;Int?&quot;， 或者类型 &quot;optional Int&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为Int使用字符串的构造方法，可能成功也可能失败。比如字符串“Hello, world”就不能转换成Int。所以convertedNumber就是一个可选类型。当我们定义变量或常量时如果有值不存在的情况，使用可选类型。</p>

<!-- more -->


<p>  <br/>
那么什么是隐式可选类型呢？隐式可选类型是可选类型的一种，有时候在程序架构中，第一次被赋值之后，可以确定一个可选类型总会有值。在这种情况下，每次都要判断和解析可选值是非常低效的，因为可以确定它总会有值。这种类型的可选状态被定义为隐式解析可选类型（implicitly unwrapped optionals）。使用！进行声明：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="nl">assumedString:</span> <span class="n">String</span><span class="o">!</span> <span class="o">=</span> <span class="s">&quot;An implicitly unwrapped optional string.&quot;</span>
</span><span class='line'><span class="n">let</span> <span class="nl">implicitString:</span> <span class="n">String</span> <span class="o">=</span> <span class="n">assumedString</span>  <span class="c1">// 不需要感叹号</span>
</span></code></pre></td></tr></table></div></figure>


<p>
隐式可选类型可以理解为一个可以自动解析的可选类型，因为它总是有值，不用使用！进行强制解包。</p>

<h4>二、可选类型底层实现</h4>

<p>我们先看看Swift源码中可选类型的定义：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="k">enum</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">Wrapped</span><span class="o">&gt;</span> <span class="o">:</span> <span class="n">ExpressibleByNilLiteral</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">none</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">some</span><span class="p">(</span><span class="n">Wrapped</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">/// Construct a non-\ `nil` instance that stores `some`.</span>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="n">_</span> <span class="nl">some:</span> <span class="n">Wrapped</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>可选类型被定义为枚举类型，因为Swift中枚举可以关联值，枚举类型可以明确的表示有值或者无值的情况。
我们再看看隐式可选类型的定义：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="k">enum</span> <span class="n">ImplicitlyUnwrappedOptional</span><span class="o">&lt;</span><span class="n">Wrapped</span><span class="o">&gt;</span> <span class="o">:</span> <span class="n">ExpressibleByNilLiteral</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">none</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">some</span><span class="p">(</span><span class="n">Wrapped</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">/// Construct a non-\ `nil` instance that stores `some`.</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">init</span><span class="p">(</span><span class="n">_</span> <span class="nl">some:</span> <span class="n">Wrapped</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// Construct an instance from an explicitly unwrapped optional</span>
</span><span class='line'>    <span class="c1">/// (`T?`).</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">init</span><span class="p">(</span><span class="nl">nilLiteral:</span> <span class="p">())</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>虽然隐式可选类型可以当做一种有值的可选类型，但他们却被定义成了两种类型，没有继承关系。我们可以看到两者定义本身没有区别，因为隐式可选类型除了表示有值情况的可选类型，也可以当做正常的可选类型来使用。</p>

<h4>三、隐式可选类型的使用</h4>

<p>什么情况下使用隐式可选类型呢？
1、在声明时无法初始化的常量定义为隐式可选类型，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">MyView:</span> <span class="n">UIView</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">startingOrigin:</span> <span class="n">CGPoint</span><span class="o">!</span>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">awakeFromNib</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">awakeFromNib</span><span class="p">()</span>
</span><span class='line'>        <span class="n">startingOrigin</span> <span class="o">=</span> <span class="n">frame</span><span class="p">.</span><span class="n">origin</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>2、使用IB声明的属性</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">MyView:</span> <span class="n">UIView</span> <span class="p">{</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">private</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">titleLabel:</span> <span class="n">UILabel</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">layoutSubviews</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">layoutSubviews</span><span class="p">()</span>
</span><span class='line'>        <span class="n">titleLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">&quot;Hello, world&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>总之，在使用隐式可选变量时保证它一定有值。</p>

<h4>四、隐式可选类型的今生</h4>

<p>上面说的是隐式可选类型的前世，而在Swift4.2之后，Swift开发组重新实现可选类型的隐式解包。为什么要这么做，官方博客上说，“消除了类型检测中的一些矛盾，并且阐明了处理这些值的规则，使语义保持一致且易于推理。”具体可以参考<a href="https://github.com/apple/swift-evolution/blob/master/proposals/0054-abolish-iuo.md#motivation">：动机</a>
重新实现之后，在使用隐式可选包时编译器不会再自动的解析，需要我们手动进行强制解析，即加上！。</p>

<p>在新的实现上，隐式可选类型和可选类型是同一种类型，类型检测的一致性将会更好，编译器的特殊情况也会更少。删除这些特殊情况会减少处理声明时的错误数量。总之，尽量不要使用隐式可选类型，改用 if let 和 guard let 来显式解包。如果确定有值，就用 ! 来显式强制解包。</p>

<h4>参考链接</h4>

<ul>
<li><a href="https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html">The swift programming language</a></li>
<li><a href="https://drewag.me/posts/2014/07/05/uses-for-implicitly-unwrapped-optionals-in-swift">Uses for Implicitly Unwrapped Optionals in Swift</a></li>
<li><a href="https://swift.org/blog/iuo/">Reimplementation of Implicitly Unwrapped Optionals</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS动态库注入实践-伪造微信定位]]></title>
    <link href="http://cloay.com/blog/2017/02/27/iosdong-tai-ku-zhu-ru-shi-jian-wei-zao-wei-xin-ding-wei/"/>
    <updated>2017-02-27T18:29:00+08:00</updated>
    <id>http://cloay.com/blog/2017/02/27/iosdong-tai-ku-zhu-ru-shi-jian-wei-zao-wei-xin-ding-wei</id>
    <content type="html"><![CDATA[<p>原理：创建一个动态库利用oc的runtime特性替换定位相关回调方法伪造GPS坐标，然后将动态库注入微信。</p>

<h2>伪造GPS坐标</h2>

<p>原理图：</p>

<p><img src="http://cloay.com/images/fake.jpg" alt="fake" /></p>

<p>替换CLLocationManager的setDelegate:方法，将CLLocationManager的delegate替换为我们自定义的WMLocationProxy代理类，WMLocationProxy持有真正的CLLocationManager的delegate。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">wm_setDelegate:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">delegate</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">WMLocationProxy</span> <span class="o">*</span><span class="n">proxy</span> <span class="o">=</span> <span class="p">[[</span><span class="n">WMLocationProxy</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">proxy</span><span class="p">.</span><span class="n">oLMDelegate</span> <span class="o">=</span> <span class="n">delegate</span><span class="p">;</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">proxy</span> <span class="o">=</span> <span class="n">proxy</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">wm_setDelegate:</span><span class="n">proxy</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>在WMLocationProxy中转发CLLocationManagerDelegate的方法时先替换位置坐标，然后再转发给CLLocationManagerDelegate。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">forwardInvocation:</span><span class="p">(</span><span class="n">NSInvocation</span> <span class="o">*</span><span class="p">)</span><span class="nv">anInvocation</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">oLMDelegate</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">oLMDelegate</span> <span class="nl">respondsToSelector:</span><span class="n">anInvocation</span><span class="p">.</span><span class="n">selector</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">anInvocation</span><span class="p">.</span><span class="n">selector</span> <span class="o">==</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">locationManager:didUpdateToLocation:fromLocation:</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">CLLocation</span> <span class="o">*</span><span class="n">originLocation</span><span class="p">;</span>
</span><span class='line'>            <span class="p">[</span><span class="n">anInvocation</span> <span class="nl">getArgument:</span><span class="o">&amp;</span><span class="n">originLocation</span> <span class="nl">atIndex:</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">CLLocation</span> <span class="o">*</span><span class="n">newLocation</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">makeFakeLocationWithOriginLocation:</span><span class="n">originLocation</span><span class="p">];</span>
</span><span class='line'>            <span class="p">[</span><span class="n">anInvocation</span> <span class="nl">setArgument:</span><span class="o">&amp;</span><span class="n">newLocation</span> <span class="nl">atIndex:</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">anInvocation</span><span class="p">.</span><span class="n">selector</span> <span class="o">==</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">locationManager:didUpdateLocations:</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">__unsafe_unretained</span> <span class="n">NSArray</span> <span class="o">*</span><span class="n">locations</span><span class="p">;</span>
</span><span class='line'>            <span class="p">[</span><span class="n">anInvocation</span> <span class="nl">getArgument:</span><span class="o">&amp;</span><span class="n">locations</span> <span class="nl">atIndex:</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">locations</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">CLLocation</span> <span class="o">*</span><span class="n">originLocation</span> <span class="o">=</span> <span class="n">locations</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>                <span class="n">CLLocation</span> <span class="o">*</span><span class="n">fakeLocation</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">makeFakeLocationWithOriginLocation:</span><span class="n">originLocation</span><span class="p">];</span>
</span><span class='line'>                <span class="n">NSArray</span> <span class="o">*</span><span class="n">fakeLocations</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="n">fakeLocation</span><span class="p">];</span>
</span><span class='line'>                <span class="n">self</span><span class="p">.</span><span class="n">orginLocations</span> <span class="o">=</span> <span class="n">fakeLocations</span><span class="p">;</span>
</span><span class='line'>                <span class="p">[</span><span class="n">anInvocation</span> <span class="nl">setArgument:</span><span class="o">&amp;</span><span class="n">fakeLocations</span> <span class="nl">atIndex:</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="p">[</span><span class="n">anInvocation</span> <span class="nl">invokeWithTarget:</span><span class="n">self</span><span class="p">.</span><span class="n">oLMDelegate</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>动态库（Dynamic library）注入</h2>

<p>iOS8发布之后Xcode允许创建动态库，我们可以创建一个动态库和原ipa文件合并重新打包ipa。具体参考<a href="https://github.com/depoon/iOSDylibInjectionDemo">iOSDylibInjectionDemo</a></p>

<p>stackoverflow关于动态库的问题可以看看</p>

<ul>
<li><a href="http://stackoverflow.com/questions/15331056/library-static-dynamic-or-framework-project-inside-another-project">Library? Static? Dynamic? Or Framework? Project inside another project</a></li>
<li><a href="https://stackoverflow.com/questions/4733847/can-you-build-dynamic-libraries-for-ios-and-load-them-at-runtime">Can you build dynamic libraries for iOS and load them at runtime?</a></li>
</ul>


<br>


<br>


<br>


<br>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WebView loading https content]]></title>
    <link href="http://cloay.com/blog/2016/07/20/webview-loading-https-content/"/>
    <updated>2016-07-20T00:37:00+08:00</updated>
    <id>http://cloay.com/blog/2016/07/20/webview-loading-https-content</id>
    <content type="html"><![CDATA[<h3>iOS使用Webview加载https网页</h3>

<p>项目新的需求需要在客户端中嵌入网页，以前的项目中也做过类似的功能，感觉不会有什么困难，使用WebView加载指定的URL就行了。但这次我们需要加载https页面，由于没有相关的实战经验，在整个开发过程中踩了不少的坑，现在给大家分享一下。</p>

<!-- more -->


<p>首先我很2的像以前一样直接加载URL，显然是加载不出来内容的。然后开始Google，首先看到可以通过私有API中的setAllowsAnyHTTPSCertificate:forHost方法但这有被拒的风险。还有一种是通过实现自己的NSURLProtocol协议，然后拦截需要拦截的请求，在请求代理中进行证书验证。然后在把请求的结果通过NSURLProtocol的self.client URLProtocol:didLoadData:方法返回给WebView。NSURLProtocol的具体使用需要实现一下几个方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">+</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">canInitWithRequest:</span><span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nv">request</span><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">[</span><span class="n">request</span><span class="p">.</span><span class="n">URL</span><span class="p">.</span><span class="n">absoluteString</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;https://&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>canInitWithRequest方法如果是需要自己实现的请求就return YES 否则 return NO。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nf">canonicalRequestForRequest:</span><span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nv">request</span><span class="p">{</span>
</span><span class='line'>  <span class="c1">//返回规范化的请求，直接返回当前的Request就可以。</span>
</span><span class='line'>    <span class="n">NSMutableURLRequest</span> <span class="o">*</span><span class="n">cdnRequest</span> <span class="o">=</span> <span class="p">[</span><span class="n">request</span> <span class="n">mutableCopy</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">cdnRequest</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">startLoading</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//具体的加载实现</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stopLoading</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//停止</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>下面看看我们具体的实现：</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  MyWebviewProtocol.m</span>
</span><span class='line'><span class="c1">//  Cloay</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//  Created by cloay on 16/6/14.</span>
</span><span class='line'><span class="c1">//  Copyright © 2016年 Cloay. All rights reserved.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#import &quot;MyWebviewProtocol.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;AFSecurityPolicy.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyWebviewProtocol</span><span class="p">()</span><span class="o">&lt;</span><span class="n">NSURLSessionDataDelegate</span><span class="o">&gt;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">strong</span><span class="p">)</span> <span class="n">NSURLSession</span> <span class="o">*</span><span class="n">session</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyWebviewProtocol</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">canInitWithRequest:</span><span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nv">request</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">urlStr</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">URL</span><span class="p">.</span><span class="n">absoluteString</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CLog</span><span class="p">(</span><span class="s">@&quot;----origin request url = %@&quot;</span><span class="p">,</span> <span class="n">urlStr</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="p">[</span><span class="n">urlStr</span> <span class="nl">rangOfString:</span><span class="s">@&quot;https://&quot;</span><span class="p">];</span>
</span><span class='line'>   <span class="c1">//这里是我们的拦截逻辑，需要自己实现的请求就return YES</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">range</span><span class="p">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nf">canonicalRequestForRequest:</span><span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nv">request</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSMutableURLRequest</span> <span class="o">*</span><span class="n">myRequest</span> <span class="o">=</span> <span class="p">[</span><span class="n">request</span> <span class="n">mutableCopy</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">myRequest</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">startLoading</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">self</span><span class="p">.</span><span class="n">session</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">queue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">session</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURLSession</span> <span class="nl">sessionWithConfiguration:</span><span class="p">[</span><span class="n">NSURLSessionConfiguration</span> <span class="n">defaultSessionConfiguration</span><span class="p">]</span> <span class="nl">delegate:</span><span class="n">self</span> <span class="nl">delegateQueue:</span><span class="n">queue</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSURLSessionDataTask</span> <span class="o">*</span><span class="n">task</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">session</span> <span class="nl">dataTaskWithRequest:</span><span class="p">[</span><span class="n">TCWebviewProtocol</span> <span class="nl">canonicalRequestForRequest:</span><span class="n">self</span><span class="p">.</span><span class="n">request</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">task</span> <span class="n">resume</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">stopLoading</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">session</span> <span class="n">invalidateAndCancel</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">session</span> <span class="n">finishTasksAndInvalidate</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark NSURLSession Delegate</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">URLSession:</span><span class="p">(</span><span class="n">NSURLSession</span> <span class="o">*</span><span class="p">)</span><span class="nv">session</span> <span class="nf">task:</span><span class="p">(</span><span class="n">NSURLSessionTask</span> <span class="o">*</span><span class="p">)</span><span class="nv">task</span> <span class="nf">willPerformHTTPRedirection:</span><span class="p">(</span><span class="n">NSHTTPURLResponse</span> <span class="o">*</span><span class="p">)</span><span class="nv">response</span>
</span><span class='line'>        <span class="nf">newRequest:</span><span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">*</span><span class="p">)</span><span class="nv">request</span>
</span><span class='line'>    <span class="nf">completionHandler:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSURLRequest</span> <span class="o">*</span> <span class="n">__nullable</span><span class="p">))</span><span class="nv">completionHandler</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">client</span> <span class="nl">URLProtocol:</span><span class="n">self</span> <span class="nl">wasRedirectedToRequest:</span><span class="n">request</span> <span class="nl">redirectResponse:</span><span class="n">response</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">URLSession:</span><span class="p">(</span><span class="n">NSURLSession</span> <span class="o">*</span><span class="p">)</span><span class="nv">session</span> <span class="nf">didReceiveChallenge:</span><span class="p">(</span><span class="n">NSURLAuthenticationChallenge</span> <span class="o">*</span><span class="p">)</span><span class="nv">challenge</span> <span class="nf">completionHandler:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSURLSessionAuthChallengeDisposition</span><span class="p">,</span> <span class="n">NSURLCredential</span> <span class="o">*</span><span class="p">))</span><span class="nv">completionHandler</span><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSURLSessionAuthChallengeDisposition</span> <span class="n">disposition</span> <span class="o">=</span> <span class="n">NSURLSessionAuthChallengePerformDefaultHandling</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSURLCredential</span> <span class="o">*</span><span class="n">credential</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">([</span><span class="n">challenge</span><span class="p">.</span><span class="n">protectionSpace</span><span class="p">.</span><span class="n">authenticationMethod</span> <span class="nl">isEqualToString:</span><span class="n">NSURLAuthenticationMethodServerTrust</span><span class="p">]){</span>
</span><span class='line'>        <span class="n">AFSecurityPolicy</span> <span class="o">*</span><span class="n">securityPolicy</span> <span class="o">=</span> <span class="p">[</span><span class="n">AFSecurityPolicy</span> <span class="nl">policyWithPinningMode:</span><span class="n">AFSSLPinningModeCertificate</span><span class="p">];</span>
</span><span class='line'>        <span class="err">#</span><span class="k">if</span> <span class="n">DEBUG</span>
</span><span class='line'>        <span class="n">securityPolicy</span><span class="p">.</span><span class="n">allowInvalidCertificates</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>        <span class="n">securityPolicy</span><span class="p">.</span><span class="n">validatesDomainName</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>        <span class="err">#</span><span class="n">endif</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">([</span><span class="n">securityPolicy</span> <span class="nl">evaluateServerTrust:</span><span class="n">challenge</span><span class="p">.</span><span class="n">protectionSpace</span><span class="p">.</span><span class="n">serverTrust</span> <span class="nl">forDomain:</span><span class="n">challenge</span><span class="p">.</span><span class="n">protectionSpace</span><span class="p">.</span><span class="n">host</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">credential</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURLCredential</span> <span class="nl">credentialForTrust:</span><span class="n">challenge</span><span class="p">.</span><span class="n">protectionSpace</span><span class="p">.</span><span class="n">serverTrust</span><span class="p">];</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">credential</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">disposition</span> <span class="o">=</span> <span class="n">NSURLSessionAuthChallengeUseCredential</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">disposition</span> <span class="o">=</span> <span class="n">NSURLSessionAuthChallengeCancelAuthenticationChallenge</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">completionHandler</span><span class="p">(</span><span class="n">disposition</span><span class="p">,</span> <span class="n">credential</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">URLSession:</span><span class="p">(</span><span class="n">NSURLSession</span> <span class="o">*</span><span class="p">)</span><span class="nv">session</span> <span class="nf">dataTask:</span><span class="p">(</span><span class="n">NSURLSessionDataTask</span> <span class="o">*</span><span class="p">)</span><span class="nv">dataTask</span> <span class="nf">didReceiveResponse:</span><span class="p">(</span><span class="n">NSURLResponse</span> <span class="o">*</span><span class="p">)</span><span class="nv">response</span> <span class="nf">completionHandler:</span><span class="p">(</span><span class="kt">void</span> <span class="p">(</span><span class="o">^</span><span class="p">)(</span><span class="n">NSURLSessionResponseDisposition</span><span class="p">))</span><span class="nv">completionHandler</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">client</span> <span class="nl">URLProtocol:</span><span class="n">self</span> <span class="nl">didReceiveResponse:</span><span class="n">response</span> <span class="nl">cacheStoragePolicy:</span><span class="n">NSURLCacheStorageNotAllowed</span><span class="p">];</span>
</span><span class='line'>    <span class="n">completionHandler</span><span class="p">(</span><span class="n">NSURLSessionResponseAllow</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">URLSession:</span><span class="p">(</span><span class="n">NSURLSession</span> <span class="o">*</span><span class="p">)</span><span class="nv">session</span> <span class="nf">dataTask:</span><span class="p">(</span><span class="n">NSURLSessionDataTask</span> <span class="o">*</span><span class="p">)</span><span class="nv">dataTask</span>
</span><span class='line'>    <span class="nf">didReceiveData:</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="p">)</span><span class="nv">data</span><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">client</span> <span class="nl">URLProtocol:</span><span class="n">self</span> <span class="nl">didLoadData:</span><span class="n">data</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">URLSession:</span><span class="p">(</span><span class="n">NSURLSession</span> <span class="o">*</span><span class="p">)</span><span class="nv">session</span> <span class="nf">task:</span><span class="p">(</span><span class="n">NSURLSessionTask</span> <span class="o">*</span><span class="p">)</span><span class="nv">task</span> <span class="nf">didCompleteWithError:</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="p">)</span><span class="nv">error</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>         <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">client</span> <span class="nl">URLProtocol:</span><span class="n">self</span> <span class="nl">didFailWithError:</span><span class="n">error</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">client</span> <span class="nl">URLProtocolDidFinishLoading:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们的项目兼容iOS7以上系统，所以这里我们就使用了NSURLSession来实现具体的请求。通过委托的URLSession:didReceiveChallenge:completionHandler:方法进行证书的验证。通过这种方式看似很好的解决了我们的问题，也没有什么难度。然而在我们后续的测试和使用WKWebview优化的过程中相关坑陆续的蹦出来了，页面怎么都加载不出来了。把我都快坑炸了。。。</p>

<h3>我们发现的坑</h3>

<p>开始调试时通过这种方式在iOS7和iOS9中没有什么问题，所有页面正常显示。后来我们为了性能在iOS8以上系统使用WKWebview来实现我们的功能。WKWebView是iOS8以后出的新的性能更优的WebView，虽然WKWebview的请求不能通过NSURLProtocol这种方式拦截，但可以直接通过WKNavigationDelegate中的webView:didReceiveChallenge:completionHandler:方法完成我们的需求，这样更简单。然后我们就马不停蹄的在iOS8以后的系统中替换成了WKWebView，然而事实证明我们是Too young了。在调试时我们发现iOS8系统死活不调用webView:didReceiveChallenge:completionHandler:方法，后来发现这是iOS8的一个bug（<a href="https://bugs.webkit.org/show_bug.cgi?id=135327"> Server trust authentication challenges aren’t sent to the navigation delegate</a>），直到iOS9才修复。</p>

<p>接着我们又改为在iOS9使用WKWebView,iOS9以下继续使用UIWebView。悲剧的是在接下来的调试中我们又发现了一个问题。我们页面中需要登录，做法是客户端中用户登录后把token传给页面，让页面做一次自动登录。调试时在iOS7中一切正常，然而在iOS8中一直登录不成功，页面一直重定向到一个登录页面。这个问题纠结了好几天后来发现我们没有保持cookie，我们的NSURLSession的配置使用ephemeralSessionConfiguration，看文档发现ephemeralSessionConfiguration不保持cookie的。好吧，又2了。。。</p>

<h3>总结</h3>

<p>客户端嵌入https网页时，在iOS8及一下还是只能使用UIWebView，通过实现NSURLProtocol自己实现网络请求进行证书验证。在iOS9系统中直接使用WKWebView就能很好的满足常见的需求。</p>

<p>参考链接：</p>

<ul>
<li><a href="http://nshipster.com/nsurlprotocol/">NSHipster NSURLProtocol
</a></li>
<li><a href="https://bugs.webkit.org/show_bug.cgi?id=135327"> Server trust authentication challenges aren’t sent to the navigation delegate</a></li>
</ul>


<br>


<br>


<br>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift通过减少动态绑定提高性能（译)]]></title>
    <link href="http://cloay.com/blog/2016/04/24/increasing-performance-by-reducing-dynamic-dispatch/"/>
    <updated>2016-04-24T14:49:00+08:00</updated>
    <id>http://cloay.com/blog/2016/04/24/increasing-performance-by-reducing-dynamic-dispatch</id>
    <content type="html"><![CDATA[<p>本文译自Swift官方博客，原文链接：<a href="https://developer.apple.com/swift/blog/?id=27">Increasing Performance by Reducing Dynamic Dispatch</a></p>

<p>像其他编程语言一样Swift容许重载父类的方法和属性，这就意味着程序要在运行时去决定执行间接的方法调用和属性访问。这种技术被称之为动态绑定（关于动态绑定<a href="https://en.wikipedia.org/wiki/Dynamic_dispatch">dynamic dispatch</a>），这种间接的调用方式增加了语言的表现力但也会增加一定的运行时开销，在性能敏感的代码中这种开销是不可接受的。本文为大家展示使用final和private关键字以及全局模块优化（Whole Module Optimization）三种方式来减少动态绑定提高性能。</p>

<!-- more -->


<p>看看下面的例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="n">ParticleModel</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">point</span> <span class="o">=</span> <span class="p">(</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">velocity</span> <span class="o">=</span> <span class="mf">100.0</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">updatePoint</span><span class="p">(</span><span class="nl">newPoint:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newVelocity:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">point</span> <span class="o">=</span> <span class="n">newPoint</span>
</span><span class='line'>      <span class="n">velocity</span> <span class="o">=</span> <span class="n">newVelocity</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">update</span><span class="p">(</span><span class="nl">newP:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newV:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">updatePoint</span><span class="p">(</span><span class="n">newP</span><span class="p">,</span> <span class="nl">newVelocity:</span> <span class="n">newV</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">var</span> <span class="n">p</span> <span class="o">=</span> <span class="n">ParticleModel</span><span class="p">()</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">stride</span><span class="p">(</span><span class="nl">from:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">through:</span> <span class="mi">360</span><span class="p">,</span> <span class="nl">by:</span> <span class="mf">1.0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">p</span><span class="p">.</span><span class="n">update</span><span class="p">((</span><span class="n">i</span> <span class="o">*</span> <span class="n">sin</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">i</span><span class="p">),</span> <span class="nl">newV:</span><span class="n">i</span><span class="o">*</span><span class="mi">1000</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上述代码中编译器将会以动态绑定的方式发出的调用有：</p>

<ol>
<li>对方法update()的调用</li>
<li>方法updatePoint()的调用</li>
<li>属性元组point的访问</li>
<li>属性velocity的访问</li>
</ol>


<p>当我们查看这段代码时发现这不是我们期望的样子。动态调用在这里是非常必要的，因为ParticleModel的子类有可能重载point和velocity这两个计算属性，也可能重载update()和updatePoint()方法。</p>

<p>在Swift中动态绑定的调用是通过从方法列表中查找该函数然后执行一个间接的调用来实现的。这比直接执行一个方法调用要慢。另外，间接的方法调用也会对编译器的优化造成阻碍，这使得间接调用花费更大的开销。在性能要求较高的地方我们可以使用一些技巧去限制不必要的动态特性来提高性能。</p>

<h3>使用final关键字修饰肯定不会被重载的声明</h3>

<p>final关键字修饰的类、方法和属性表示不能被重载，这意味着编译器可以安全的忽略那些需要动态绑定的间接调用。例如，下面代码中属性point和velocity将通过加载类储存变量的形式直接被访问，方法updatePoint()也会以直接方法调用的方式被调用。但另一方面update()方法仍会以动态绑定的形式被调用，仍然容许被子类重载来实现想要的功能。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="n">ParticleModel</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">final</span> <span class="n">var</span> <span class="n">point</span> <span class="o">=</span> <span class="p">(</span> <span class="nl">x:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mf">0.0</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">final</span> <span class="n">var</span> <span class="n">velocity</span> <span class="o">=</span> <span class="mf">100.0</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">final</span> <span class="n">func</span> <span class="n">updatePoint</span><span class="p">(</span><span class="nl">newPoint:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newVelocity:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">point</span> <span class="o">=</span> <span class="n">newPoint</span>
</span><span class='line'>      <span class="n">velocity</span> <span class="o">=</span> <span class="n">newVelocity</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">update</span><span class="p">(</span><span class="nl">newP:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newV:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">updatePoint</span><span class="p">(</span><span class="n">newP</span><span class="p">,</span> <span class="nl">newVelocity:</span> <span class="n">newV</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>将整个类标记为final类也是可行的，这样类将不能被子类化，所有的方法和属性也叫被标记为final类型。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">final</span> <span class="n">class</span> <span class="n">ParticleModel</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">point</span> <span class="o">=</span> <span class="p">(</span> <span class="nl">x:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mf">0.0</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">velocity</span> <span class="o">=</span> <span class="mf">100.0</span>
</span><span class='line'>  <span class="c1">// ...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>将文件中使用private关键字修饰的声明推断为final</h3>

<p>使用private关键字修饰的声明只能在当前文件中进行访问。这样编译器可以找到所有潜在的重载声明。任何没有被重载的声明编译器自动的将它推断为final类型并且去除间接的方法调用和属性访问。</p>

<p>假定在当前的文件中没有任何类继承了ParticleModel类，编译器可以将所有使用private关键字修饰的声明的动态绑定的方法替换为直接的方法调用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="n">ParticleModel</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="n">point</span> <span class="o">=</span> <span class="p">(</span> <span class="nl">x:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mf">0.0</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="n">velocity</span> <span class="o">=</span> <span class="mf">100.0</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">private</span> <span class="n">func</span> <span class="n">updatePoint</span><span class="p">(</span><span class="nl">newPoint:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newVelocity:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">point</span> <span class="o">=</span> <span class="n">newPoint</span>
</span><span class='line'>      <span class="n">velocity</span> <span class="o">=</span> <span class="n">newVelocity</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">update</span><span class="p">(</span><span class="nl">newP:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newV:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">updatePoint</span><span class="p">(</span><span class="n">newP</span><span class="p">,</span> <span class="nl">newVelocity:</span> <span class="n">newV</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在上面的例子中，属性point和velocity将会被直接访问，方法updatePoint()被直接调用。然而update()方法仍将以间接的方式调用，因为它不是private类型的。</p>

<p>和final关键字一样，使用private关键字修饰的类会将整个类标记为private类型，类的所有方法和属性也都是private类型的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">private</span> <span class="n">class</span> <span class="n">ParticleModel</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">point</span> <span class="o">=</span> <span class="p">(</span> <span class="nl">x:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mf">0.0</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">velocity</span> <span class="o">=</span> <span class="mf">100.0</span>
</span><span class='line'>  <span class="c1">// ...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用全局模块优化推断internal声明为final</h3>

<p>使用internal（如果声明没有使用关键词修饰，默认是internal）关键字修饰的声明的作用域仅限于它被声明的模块中。因为Swift通常的将这些文件作为一个独立的模块进行编译，所以编译器不能确定一个internal声明有没有在其他的文件中被重载。然而如果全局模块优化（Whole Module Optimization，关于全局模块优化参看下文的相关名词解释）是打开的那么所有的模块将要在同一时间被一起编译。这样以来编译器就可以为整个模块一起做出推断，将没有被重载的internal修饰的声明推断为final类型。</p>

<p>让我们回到最开始的代码，这次为ParticleModel类加上额外public关键字。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="n">class</span> <span class="n">ParticleModel</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">point</span> <span class="o">=</span> <span class="p">(</span> <span class="nl">x:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mf">0.0</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">var</span> <span class="n">velocity</span> <span class="o">=</span> <span class="mf">100.0</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">updatePoint</span><span class="p">(</span><span class="nl">newPoint:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newVelocity:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">point</span> <span class="o">=</span> <span class="n">newPoint</span>
</span><span class='line'>      <span class="n">velocity</span> <span class="o">=</span> <span class="n">newVelocity</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">public</span> <span class="n">func</span> <span class="n">update</span><span class="p">(</span><span class="nl">newP:</span> <span class="p">(</span><span class="n">Double</span><span class="p">,</span> <span class="n">Double</span><span class="p">),</span> <span class="nl">newV:</span> <span class="n">Double</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">updatePoint</span><span class="p">(</span><span class="n">newP</span><span class="p">,</span> <span class="nl">newVelocity:</span> <span class="n">newV</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">var</span> <span class="n">p</span> <span class="o">=</span> <span class="n">ParticleModel</span><span class="p">()</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">stride</span><span class="p">(</span><span class="nl">from:</span> <span class="mf">0.0</span><span class="p">,</span> <span class="nl">through:</span> <span class="n">times</span><span class="p">,</span> <span class="nl">by:</span> <span class="mf">1.0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">p</span><span class="p">.</span><span class="n">update</span><span class="p">((</span><span class="n">i</span> <span class="o">*</span> <span class="n">sin</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">i</span><span class="p">),</span> <span class="nl">newV:</span><span class="n">i</span><span class="o">*</span><span class="mi">1000</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当以全局模块优化的方式编译这段代码时，编译器能够推断出属性point，velocity和方法updatePoint()为final类型。与此相反的是被public关键字修饰的update()方法不能被推断为final类型。</p>

<h3>相关名词解释：</h3>

<p>全局模块优化（Whole Module Optimization）是Xcode7提供的Swift新的编译优化方式，可以在build settings进行设置。苹果建议我们在Release模式下使用，全局模块优化模式会减慢编译的速度</p>

<p><img src="http://useyourloaf.com/assets/images/2015/2015-07-26-001.png" alt="Whole Module Optimization" /></p>

<p>参考链接：</p>

<ul>
<li><a href="http://useyourloaf.com/blog/swift-whole-module-optimization/">Swift Whole Module Optimization</a></li>
</ul>


<br>


<br>


<br>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[离屏渲染问题性能探究]]></title>
    <link href="http://cloay.com/blog/2016/04/23/ti-xing-neng-tan-jiu/"/>
    <updated>2016-04-23T16:50:00+08:00</updated>
    <id>http://cloay.com/blog/2016/04/23/ti-xing-neng-tan-jiu</id>
    <content type="html"><![CDATA[<p>应用程序的性能是衡量一个应用程序质量的重要指标，通常来说程序的性能是指程序对操作（包含用户操作）响应的快慢，也就是程序的流畅性。影响性能的因素有很多比如网络、I/O操作、图像文本绘制等等。本文所要探究的是关于绘制方面的内容，我们从最底层的像素绘制出发，了解底层绘制的基本原理来分析离屏渲染（Offscreen rendering）是怎么回事，离屏渲染是怎么影响性能的，如何解决离屏渲染产生的性能问题。</p>

<!-- more -->




<br>


<h1>一、绘制原理</h1>

<p>要了解绘制原理，首先我们要知道图形堆栈的概念。像素在映射到屏幕上的时候每一个像素有红绿蓝三原色组成的颜色单元格构成。我们可以趴在传统的CRT显示器屏幕看一下，能够清晰的看到屏幕是有一个一个红绿蓝相隔的单元格构成的。图形堆栈负责屏幕上数以百万计颜色单元的显示，在手机上每当屏幕滚动时，数以百万计的颜色单元必须以每秒60次的速度刷新，这是一个很大的工作量。我们再看看将App显示到屏幕上的流程图：</p>

<p><img src="http://img.objccn.io/issue-3/pixels-software-stack.png" alt="tableview" /></p>

<p>App上的视图通过Cocoa框架（包括Core Graphics，Core Animation，Core Image等，它们是对OpenGL的封装）渲染绘制，避免了我们直接调用底层晦涩难懂的OpenGL的API。OpenGL 和 GPU 密切的合作以提高GPU的能力，并实现硬件加速渲染。GPU 是一个专门为图形高并发计算而量身定做的处理单元，它并发的本性让它能高效的将不同纹理合成起来，GPU 非常快，并且比 CPU 使用更少的电来完成工作。GPU 需要将每一个 frame 的纹理(位图)合成在一起(一秒60次)。每一个纹理会占用 VRAM(video RAM)，所以需要给 GPU 同时保持纹理的数量做一个限制。</p>

<p>在iOS平台上几乎所有的东西都是通过 Core Animation 绘制出来的，一些游戏等应用直接使用 OpenGL/OpenGL ES 进行绘制。Core Animation通过将视图的内容缓存到一张bitmap位图中直接通过硬件加速进行绘制也就是通过GPU。还有一些Quartz / Core Graphics等是直接通过CPU进行绘制的，比如我们常见的View中drawRect方法就是在主线程上通过CPU直接绘制的，两种方式性能相差很大。</p>

<br>


<h1>二、离屏渲染</h1>

<h3>1、什么是离屏渲染(Offscreen rendering)</h3>

<p>离屏渲染指的是将视图绘制到当前屏幕前，先在屏幕外进行一次渲染之后再绘制到当前屏幕。创建额外的屏幕外缓冲区使得 GPU 需要多做一步操作，一般情况下，要尽量避免离屏渲染。因为离屏渲染合成计算是非常昂贵的，直接将图层合成到帧的缓冲区中(在屏幕上)比离屏渲染（先创建屏幕外缓冲区然后渲染到纹理中最后将结果渲染到帧的缓冲区中）要廉价很多。因为这其中涉及两次昂贵的环境转换(转换环境到屏幕外缓冲区，然后转换环境到帧缓冲区)。</p>

<p>当我们需要重复利用复杂内容不变的图层时，我们可以强制离屏渲染缓存那些图层，然后可以用缓存作为合成的结果绘制到屏幕上。比如有时候我们需要对layer进行动画，我们就可以使用离屏渲染。当使用离屏渲染时，GPU 第一次会混合所有图层到一个基于新的纹理的位图缓存上，然后使用这个纹理来绘制到屏幕上。现在，当这些图层一起移动的时候，GPU 便可以复用这个位图缓存，并且只需要做很少的工作。下面是通过Core Animation对layer做动画的过程：</p>

<p><img src="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Art/basics_layer_rendering_2x.png" alt="tableview" /></p>

<p>如果我们需要重绘缓存的图层可以设置shouldRasterize为YES来进行重建。但当需要大量频繁的创建这样的图层（离屏渲染）时，会带来大量的资源损耗，这个时候GPU不能及时处理的帧就会被丢掉，频幕看起来就会卡顿。</p>

<h3>2、查看离屏渲染</h3>

<p>模拟器查看Offscreen-rendering可以通过打开模拟器debug菜单勾选Color Offscreen-Renerder，离屏渲染的元素会被黄色的方块覆盖，如下图：</p>

<p><img src="http://cloay.com/images/offscreen/IMG_3048.PNG" width="360"></p>

<p>也可以使用Instrumengts选择Core Animation，然后勾选右下角Color Offscreen-Renerder选项即可，勾选Color Hits Green and Misses Red选项可以查看那些离屏渲染被复用了，绿色表示被复用红色表示被重新创建了。当离屏渲染的位图缓存被重建了那么就需要重新权衡一下是否应该使用离屏渲染。</p>

<h3>3、常见的离屏渲染情形</h3>

<ol>
<li>为layer使用蒙板（mask）比如圆角效果（圆角是特殊的蒙板）描边等</li>
<li>设置阴影效果（shadow）</li>
<li>设置了masksToBounds, clipsToBounds, shouldRasterize属性值为YES</li>
<li>CASharpLayer矢量图形</li>
</ol>


<p>比如我们常见的TableView中，每个cell都有一些使用layer的cornerRadius属性切圆角(见下图：)</p>

<p><img src="http://cloay.com/images/offscreen/IMG_3048.PNG" width="360"></p>

<p>我们通常又对cell进行了重用，当我们滚动tableview时，被复用的cell的内容又发生了变化就需要重新绘制。这时就会产生大量离屏渲染对性能产生损耗，tableview滚动也就没有那么流畅了。</p>

<h3>4、提高绘制性能的Tips</h3>

<ol>
<li>当我们需要圆角效果时，可以使用一张中间透明图片蒙上去。或者使用代码手动生成圆角Image设置到要显示的View上</li>
<li>使用ShadowPath指定layer阴影效果路径</li>
<li>使用异步进行layer渲染（Facebook开源的异步绘制框架<a href="https://github.com/facebook/AsyncDisplayKit">AsyncDisplayKit</a>）</li>
<li>设置layer的opaque值为YES，减少复杂图层合成</li>
<li>尽量使用不包含透明（alpha）通道的图片资源</li>
<li>尽量设置layer的大小值为整形值</li>
</ol>


<p>使用代码手动生成圆角Image后，再看已经没有离屏渲染问题了，帧率也从40左右上升到了差不多60了。</p>

<p><img src="http://cloay.com/images/offscreen/IMG_3033.PNG" width="360">
<img src="http://cloay.com/images/offscreen/IMG_3039.png" width="360"></p>

<p>生产图片圆角代码:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">tf_imageWithRoundedCorners:</span><span class="p">(</span><span class="n">CGSize</span><span class="p">)</span><span class="nv">size</span> <span class="nf">cornerRadius:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">radius</span> <span class="nf">borderWidth:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">border</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">border</span> <span class="o">&gt;</span> <span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">border</span> <span class="o">=</span> <span class="mf">1.f</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGRect</span> <span class="n">rect</span> <span class="o">=</span> <span class="p">(</span><span class="n">CGRect</span><span class="p">){</span><span class="mf">0.f</span><span class="p">,</span> <span class="mf">0.f</span><span class="p">,</span> <span class="n">size</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="n">NO</span><span class="p">,</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">.</span><span class="n">scale</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRoundedRect:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="n">border</span><span class="p">,</span> <span class="n">border</span><span class="p">,</span> <span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">border</span><span class="p">,</span> <span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">border</span><span class="p">)</span> <span class="nl">cornerRadius:</span><span class="n">radius</span> <span class="o">-</span> <span class="n">border</span><span class="p">];</span>
</span><span class='line'>    <span class="n">path</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="n">border</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIColor</span> <span class="nl">hexStringToColor:</span><span class="s">@&quot;#bbbbbb&quot;</span><span class="p">]</span> <span class="n">setStroke</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="n">stroke</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CGContextAddPath</span><span class="p">(</span><span class="n">UIGraphicsGetCurrentContext</span><span class="p">(),</span> <span class="n">path</span><span class="p">.</span><span class="n">CGPath</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextClip</span><span class="p">(</span><span class="n">UIGraphicsGetCurrentContext</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">drawInRect:</span><span class="n">rect</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIImage</span> <span class="o">*</span><span class="n">output</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">output</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<br>


<h1>三、总结</h1>

<p>应用程序的性能非常重要。影响性能的问题有多个方面，通过了解底层绘制的基本原理，使我们能够快速定位和解决问题。本文主要介绍了离屏渲染相关的内容，在内容不变的情形下可以重复利用位图缓存加速绘制。但当大量频繁进行离屏渲染时会对性能造成很大的损耗。在使用离屏渲染的时候，一定要权衡好性能问题。</p>

<p>参考链接：</p>

<ul>
<li><a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreAnimation_guide/Introduction/Introduction.html">Core Animation Programming Guide</a></li>
<li><a href="https://www.objc.io/issues/3-views/moving-pixels-onto-the-screen/">Getting Pixels onto the Screen</a></li>
<li><a href="http://blog.ibireme.com/2015/11/12/smooth_user_interfaces_for_ios/">iOS 保持界面流畅的技巧</a></li>
</ul>


<br>


<br>


<br>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多线程实现之Operation Queues]]></title>
    <link href="http://cloay.com/blog/2016/03/26/duo-xian-cheng-shi-xian-zhi-nsoperationhe-nsoperationqueue/"/>
    <updated>2016-03-26T17:39:00+08:00</updated>
    <id>http://cloay.com/blog/2016/03/26/duo-xian-cheng-shi-xian-zhi-nsoperationhe-nsoperationqueue</id>
    <content type="html"><![CDATA[<h3>一、Operation Queues简介</h3>

<p>Cocoa operations 为我们提供了一种面向对象的方式的来封装异步任务。包含Cocoa框架中的NSOperation和NSOperationQueue两个类，Operation通常与OperationQueue相结合来使用，是多线程的一种实现方式。其实现方式一是创建新线程，二是使用GCD的方式实现，相对于GCD可操作性高，是GCD的一种替代方式。</p>

<!-- more -->


<h3>二、NSOperation介绍</h3>

<p>NSOperation是一个抽象类，表示一个独立的计算单元。因为是抽象类我们不能直接使用，苹果为我们实现了两个类既NSInvocationOperation和NSBlockOperation。我们也可以自定义自己的Operation通过继承NSOperation类。</p>

<h4>1、NSOperation的方法和属性</h4>

<p><strong>NSOperation定义的属性如下：</strong></p>

<ul>
<li>completionBlock 该属性是任务完成后调用的block</li>
<li>cancelled, executing, finished, concurrent, asynchronous, ready 这些是Operation的相关状态</li>
<li>name Operation的名字</li>
<li>queuePriority 执行的优先级
有以下几种：</li>
<li>NSOperationQueuePriorityVeryLow</li>
<li>NSOperationQueuePriorityLow</li>
<li>NSOperationQueuePriorityNormal</li>
<li>NSOperationQueuePriorityHigh</li>
<li>NSOperationQueuePriorityVeryHigh</li>
</ul>


<p><strong>NSOperation定义的方法有如下：</strong></p>

<ul>
<li>start 启动任务</li>
<li>main      真正执行任务的的方法，自定义Operation必须实现该方法</li>
<li>cancel    取消任务</li>
<li>addDependency 添加依赖方法，添加依赖任务会在依赖任务完成后才执行</li>
<li>removeDependency  移除依赖</li>
<li>waitUnitlFinished 该方法会阻塞当前线程直到该操作任务完成。一个Operation决不能自身调用改方法，也不能在加入OperationQueue之前调用。</li>
</ul>


<h4>2、创建Operation</h4>

<p>使用NSInvocationOperation创建</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSInvocationOperation</span> <span class="o">*</span><span class="n">invocationOperation</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSInvocationOperation</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget:</span><span class="n">self</span> <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">invocationOperationTask</span><span class="p">)</span> <span class="nl">object:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">invocationOperation</span> <span class="n">start</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用NSBlockOperation创建</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation thread =%@ &quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">NSThread</span> <span class="n">currentThread</span><span class="p">]);</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation task...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}];</span>
</span><span class='line'><span class="p">[</span><span class="n">blockOperation</span> <span class="n">start</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>自定义Operation必须实现initialization和main方法，Operation默认按synchronous方式执行，若要按asynchronous方式则必须实现start, isExecuting, isFinished, isConcurrent方法并且维护Executing, Finished, Concurrent等状态值的更新。</p>

<p>下面是自定义异步Operation实现：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import &quot;MyOperation.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyOperation</span><span class="p">(){</span>
</span><span class='line'>    <span class="kt">BOOL</span> <span class="n">finished</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">BOOL</span> <span class="n">executing</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">completeOperation</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyOperation</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">init</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">executing</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>        <span class="n">finished</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">start</span><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">([</span><span class="n">self</span> <span class="n">isCancelled</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Must move the operation to the finished state if it is canceled.</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="nl">willChangeValueForKey:</span><span class="s">@&quot;isFinished&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="n">finished</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="nl">didChangeValueForKey:</span><span class="s">@&quot;isFinished&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;has cancelled ...&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// If the operation is not canceled, begin executing the task.</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">willChangeValueForKey:</span><span class="s">@&quot;isExecuting&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">NSThread</span> <span class="nl">detachNewThreadSelector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">main</span><span class="p">)</span> <span class="nl">toTarget:</span><span class="n">self</span> <span class="nl">withObject:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>    <span class="n">executing</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">didChangeValueForKey:</span><span class="s">@&quot;isExecuting&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">@try</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Do the main work of the operation here.</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;do task ....&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="n">completeOperation</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">@catch</span><span class="p">(...)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Do not rethrow exceptions.</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;do task exception....&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">completeOperation</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">willChangeValueForKey:</span><span class="s">@&quot;isFinished&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">willChangeValueForKey:</span><span class="s">@&quot;isExecuting&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">executing</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="n">finished</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">didChangeValueForKey:</span><span class="s">@&quot;isExecuting&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">didChangeValueForKey:</span><span class="s">@&quot;isFinished&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isConcurrent</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isAsynchronous</span><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isExecuting</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">executing</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isFinished</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">finished</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>三、使用NSOperationQueue管理Operation队列</h3>

<p>简单的Operation不没有什么特别大的用处。在实际的项目中往往使用NSOperationQueue管理一连串的Operation来完成复杂任务。可以NSOperationQueue中的-(void)addOperation:(NSOperation *)方法将Operation加入队列中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSInvocationOperation</span> <span class="o">*</span><span class="n">invocationOperation</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSInvocationOperation</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTarget:</span><span class="n">self</span> <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">invocationOperationTask</span><span class="p">)</span> <span class="nl">object:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation thread =%@ &quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">NSThread</span> <span class="n">currentThread</span><span class="p">]);</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation task...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="n">MyOperation</span> <span class="o">*</span><span class="n">myOperation</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyOperation</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">myOperationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">//将Operation加入到队列</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">myOperation</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">invocationOperation</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">blockOperation</span><span class="p">];</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>也可以使用addOperationWithBlock方法快速添加一个Operation到OperationQueue中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;addOperationWithBlock thread =%@ &quot;</span><span class="p">,</span>     <span class="p">[</span><span class="n">NSThread</span> <span class="n">currentThread</span><span class="p">]);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;addOperationWithBlock task...&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<p>加入到OperationQueue中的Operation会按自动执行。可以设置Operation的优先级既queuePriority来改变Operation执行的优先级。使用addDependency来添加依赖关系，变相控制Operation的执行顺序。扩展一下上面的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">myOperationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">setName:</span><span class="s">@&quot;myqueue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation1</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation3 task start...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation1 task finished...&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation2</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation2 task start...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation2 task finished...&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation3</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation3 task start...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation3 task finished...&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'><span class="p">[</span><span class="n">blockOperation3</span> <span class="nl">addDependency:</span><span class="n">blockOperation1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">blockOperation1</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">blockOperation2</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">blockOperation3</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;main thread ...&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们为blockOperation3添加依赖blockOperation1，blockOperation3会在blockOperation1执行结束后才会启动。结果如下：</p>

<p><img src="http://cloay.com/images/operation/operation-dependency.png" alt="operation-dependency" /></p>

<p>在上文中我们介绍过waitUntilFinished方法下面我们就看一下它的用法，改变一下Operation加入队列的代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">blockOperation1</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">blockOperation1</span> <span class="n">waitUntilFinished</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">blockOperation2</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperation:</span><span class="n">blockOperation3</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们插入了一行[blockOperation1 waitUntilFinished]代码，并将blockOperation3的依赖设置为blockOperation2。waitUntilFinished会阻塞当前线程直到blockOperation1执行完毕。</p>

<p><img src="http://cloay.com/images/operation/operation-wait.png" alt="operation-dependency" /></p>

<p>另外OperationQueue还有方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addOperations:</span><span class="p">(</span><span class="n">NSArray</span><span class="o">&lt;</span><span class="n">NSOperation</span> <span class="o">*&gt;</span> <span class="o">*</span><span class="p">)</span><span class="nv">ops</span>
</span><span class='line'>    <span class="nf">waitUntilFinished:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">wait</span>
</span></code></pre></td></tr></table></div></figure>


<p>通过改方法可以将一组Operation加入到队列中，wait为YES时表示需要等待任务执行结束会阻塞当前线程，为NO时则直接返回。修改代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">myOperationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">setName:</span><span class="s">@&quot;myqueue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation1</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation1 task start...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation1 task finished...&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation2</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation2 task start...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation2 task finished...&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSBlockOperation</span> <span class="o">*</span><span class="n">blockOperation3</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSBlockOperation</span> <span class="nl">blockOperationWithBlock:</span><span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation3 task start...&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;blockOperation3 task finished...&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'><span class="p">[</span><span class="n">blockOperation3</span> <span class="nl">addDependency:</span><span class="n">blockOperation2</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">myOperationQueue</span> <span class="nl">addOperations:</span><span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="n">blockOperation1</span><span class="p">,</span> <span class="n">blockOperation2</span><span class="p">,</span> <span class="n">blockOperation3</span><span class="p">,</span> <span class="nb">nil</span><span class="p">]</span> <span class="nl">waitUntilFinished:</span><span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果如下：</p>

<p><img src="http://cloay.com/images/operation/operation-wait2.png" alt="operation-dependency" /></p>

<p>我们可以取消一个Operation当Operation还没有执行的时候，只需要调用cancel方法或者调用OperationQueue中的cancelAllOperations取消队列中所有没有执行的Operation。</p>

<h3>四、总结</h3>

<p>通过NSOperation和NSOpertionQueue可以实现多线程的功能。我们可以通过继承NSOperation来自定义Operation来完成复杂的功能。NSOperationQueue和GCD都是苹果为我们提供的多线程实现方式，简化了我们处理复杂业务的难度。NSOperationQueue相对与GCD操作性更高，我们可以根据实际需要来选择。</p>

<h4>参考链接:</h4>

<ul>
<li><a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/ConcurrencyProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008091-CH1-SW1">Concurrency Programming Guide</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/Cocoa/Reference/NSOperation_class/index.html#//apple_ref/occ/instp/NSOperation/queuePriority">NSOperation Class Reference</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/Cocoa/Reference/NSOperationQueue_class/index.html#//apple_ref/occ/cl/NSOperationQueue">NSOperationQueue Class Reference</a></li>
</ul>


<br><br><br><br><br>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS多线程实现方式之GCD详解]]></title>
    <link href="http://cloay.com/blog/2016/03/17/iosduo-xian-cheng-shi-xian-fang-shi-zhi-gcdxiang-jie/"/>
    <updated>2016-03-17T14:50:00+08:00</updated>
    <id>http://cloay.com/blog/2016/03/17/iosduo-xian-cheng-shi-xian-fang-shi-zhi-gcdxiang-jie</id>
    <content type="html"><![CDATA[<h3>一、什么是GCD</h3>

<p><strong>GCD</strong>是Grand Central Dispatch的缩写， 是Apple提供的一个并发编程实现库，即<a href="https://github.com/apple/swift-corelibs-libdispatch">libdispatch</a>它是使用C语言实现。提供多核硬件（ iOS和OSX ）上执行并发代码的功能。</p>

<!-- more -->


<h4>1、涉及到的并发和并行概念</h4>

<ul>
<li>并发 （Concurrent）</li>
<li>并行（parallel）</li>
</ul>


<p>并发是指当有多个线程在操作时,如果系统只有一个CPU,则它根本不可能真正同时进行一个以上的线程，它只能把CPU运行时间划分成若干个时间段,再将时间 段分配给各个线程执行，在一个时间段的线程代码运行时，其它线程处于挂起状态，这种方式我们称之为并发(Concurrent)。</p>

<p>并行是指当系统有一个以上CPU时,则线程的操作有可能非并发。当一个CPU执行一个线程时，另一个CPU可以执行另一个线程，两个线程互不抢占CPU资源，可以同时进行，这种方式我们称之为并行(Parallel)。</p>

<p>两者的区别：并发和并行是即相似又有区别的两个概念，并行是指两个或者多个事件在同一时刻发生；而并发是指两个或多个事件在同一时间间隔内发生。在多道程序环境下，并发性是指在一段时间内宏观上有多个程序在同时运行，但在单处理机系统中，每一时刻却仅能有一道程序执行，故微观上这些程序只能是分时地交替执行。倘若在计算机系统中有多个处理机，则这些可以并发执行的程序便可被分配到多个处理机上，实现并行执行，即利用每个处理机来处理一个可并发执行的程序，这样，多个程序便可以同时执行。</p>

<p>下面是一张并发和并行区别的图：</p>

<p><img src="http://joearms.github.io/images/con_and_par.jpg" alt="concurrent and parallel's diff" /></p>

<p>咖啡机就相当于CPU，并发的情况下多个线程队列分时段取咖啡，而并行在多核硬件上真正实现了同时执行任务。</p>

<h4>2、GCD中的一些基本概念</h4>

<p>Dispatch Queues</p>

<p>dispatch queue是一个对象，它可以接受任务，并将任务以先到先执行的顺序来执行。dispatch queue可以是并发的或串行的。并发任务会像NSOperationQueue那样基于系统负载来合适地并发进行，串行队列同一时间只执行单一任务。主要分为一下三中：</p>

<p>1）、 Main queue ：与主线程功能相同。实际上，提交至main queue的任务会在主线程中执行。main queue可以调用dispatch_get_main_queue()来获得。因为main queue是与主线程相关的，所以这是一个串行队列。</p>

<p>2）、Global queues: 全局队列是并发队列，并由整个进程共享。进程中存在三个全局队列：高、中（默认）、低三个优先级队列。可以调用dispatch_get_global_queue函数传入优先级来访问队列。</p>

<p>3）、用户创建队列 我们可以使用dispatch_queue_create( const char *label dispatch_queue_attr_t attr)方法自己创建队列。我们可以指定dispatch_queue_attr_t参数为 DISPATCH_QUEUE_SERIAL 和 DISPATCH_QUEUE_CONCURRENT 来创建相应的串行和并发队列。</p>

<p>GCD 对象都是oc对象支持ARC。当项目不支持ARC时使用dispatch_retain和dispatch_release管理内存的引用计数而不是retain/release。</p>

<br>


<h3>二、GCD常见用法</h3>

<h4>1、dispatch_async和dispatch_sync的简单用法</h4>

<p>a、创建一个异步任务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;i = %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>异步打印100个数</p>

<p>b、创建一个同步任务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;1&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">dispatch_sync</span><span class="p">(</span><span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;2&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;3&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为dispatch_sync是同步任务执行完毕后才会返回，即使加入了并发队列也是输出完所有的2后才会输出3.可以看到系统并没有创建新的线程：</p>

<p><img src="http://cloay.com/images/gcd/gcd_sync.png" alt="gcd_sync" /></p>

<p>再看一个例子：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;1&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">dispatch_async</span><span class="p">(</span><span class="n">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;2&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;3&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这时的输出顺序是什么呢？答案是1，3，2，2，2&hellip;&hellip;省略好多2。这是因为dispatch_get_main_queue是串行的而且和应用是同一个队列，dispatch_async创建异步任务后会立即返回，所以会先打印3。即使是使用dispatch_async方法加入main_queue依然不会创建新线程。</p>

<p><img src="http://cloay.com/images/gcd/gcd_async.png" alt="gcd_sync" /></p>

<p>c、使用GCD实现单例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">SharedInstance</span> <span class="o">*</span><span class="p">)</span><span class="nf">createSingleInstanceByGCD</span><span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">SharedInstance</span> <span class="o">*</span><span class="n">sharedInstance</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">dispatch_once_t</span> <span class="n">onceToken</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_once</span><span class="p">(</span><span class="o">&amp;</span><span class="n">onceToken</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">sharedInstance</span> <span class="o">=</span> <span class="p">[[</span><span class="n">SharedInstance</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sharedInstance</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>dispatch_once中block的代码在整个程序生命周期中只会执行一次。</p>

<p>d、延迟执行</p>

<p>可以使用dispatch_after创建异步延迟任务</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="kt">double</span> <span class="n">delayInSeconds</span> <span class="o">=</span> <span class="mf">2.0</span><span class="p">;</span>
</span><span class='line'><span class="n">dispatch_time_t</span> <span class="n">popTime</span> <span class="o">=</span> <span class="n">dispatch_time</span><span class="p">(</span><span class="n">DISPATCH_TIME_NOW</span><span class="p">,</span> <span class="p">(</span><span class="n">int64_t</span><span class="p">)(</span><span class="n">delayInSeconds</span> <span class="o">*</span> <span class="n">NSEC_PER_SEC</span><span class="p">));</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;1</span><span class="se">\n</span><span class="s">2秒后打印2&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">dispatch_after</span><span class="p">(</span><span class="n">popTime</span><span class="p">,</span> <span class="n">dispatch_get_main_queue</span><span class="p">(),</span> <span class="o">^</span><span class="p">(</span><span class="kt">void</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;2&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2、使用dispatch_queue_create自定义队列</h4>

<p>a、创建一个串行队列</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_queue_t</span> <span class="n">serialQueue</span> <span class="o">=</span> <span class="n">dispatch_queue_create</span><span class="p">(</span><span class="s">&quot;com.cloay.myserialqueue&quot;</span><span class="p">,</span> <span class="n">DISPATCH_QUEUE_SERIAL</span><span class="p">);</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">serialQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 1&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">serialQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 2&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">serialQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 3&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>串行队列中的任务是顺序执行的并且不会开启新的线程。</p>

<p><img src="http://cloay.com/images/gcd/gcd_serial_queue.png" alt="gcd_sync" /></p>

<p>b、创建一个并发队列</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_queue_t</span> <span class="n">concurrentQueue</span> <span class="o">=</span> <span class="n">dispatch_queue_create</span><span class="p">(</span><span class="s">&quot;com.cloay.myconcurrentqueue&quot;</span><span class="p">,</span> <span class="n">DISPATCH_QUEUE_CONCURRENT</span><span class="p">);</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 1&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 2&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 3&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 4&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 5&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>并发队列会根据需要开启新的线程并且执行顺序随机。</p>

<p><img src="http://cloay.com/images/gcd/gcd_concurrent_queue.png" alt="gcd_sync" /></p>

<p>既然global_queue也是并发的，手动创建并发队列和全局队列有什么区别呢？全局队列有DISPATCH_QUEUE_PRIORITY_HIGH，DISPATCH_QUEUE_PRIORITY_DEFAULT，DISPATCH_QUEUE_PRIORITY_LOW和DISPATCH_QUEUE_PRIORITY_BACKGROUND 四种优先级。使用dispatch_get_global_queue方法我们可以根据需要获取不同优先级的全局队列。手动创建的的并发队列则不可以指定优先级，但我们可以通过Dispatch Queue目标指定既dispatch_set_target_queue方法将用户队列的目标队列设定为任意优先级的全局队列。在低层，GCD全局dispatch_queue仅仅是工作线程池的抽象。这些队列中的Block一旦可用，就会被dispatch到工作线程中。提交至用户队列的Block最终也会通过全局队列进入相同的工作线程池。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">//目标指定，收到创建的并发队列优先级是default</span>
</span><span class='line'>    <span class="n">dispatch_set_target_queue</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_HIGH</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>另外我们可以使用dispatch barrier阻塞用户创建的并发队列，barrier之前的任务会全部完成之后才会执行队列中其他的任务。barrier不能用于用户创建的串行队列和全局队列。barrier用法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_queue_t</span> <span class="n">concurrentQueue</span> <span class="o">=</span> <span class="n">dispatch_queue_create</span><span class="p">(</span><span class="s">&quot;com.cloay.myconcurrentqueue&quot;</span><span class="p">,</span> <span class="n">DISPATCH_QUEUE_CONCURRENT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 1&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 2&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 3&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dispatch_barrier_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;barrier task&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 4&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">concurrentQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>     <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;task 5&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行结果</p>

<p><img src="http://cloay.com/images/gcd/gcd_barrier.png" alt="gcd_sync" /></p>

<p>另外队列可以被挂起和恢复，使用dispatch_suspend挂起队列，使用dispatch_resume恢复。</p>

<h4>3、使用dispatch_group和dispatch_apply执行并行运算</h4>

<p>dispatch_group_async可以用来将多个任务添加到一个组中进行平行运算，运算之间没有相互依赖。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_queue_t</span> <span class="n">globalQueue</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">dispatch_group_t</span> <span class="n">group</span> <span class="o">=</span> <span class="n">dispatch_group_create</span><span class="p">();</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">dispatch_group_async</span><span class="p">(</span><span class="n">group</span><span class="p">,</span> <span class="n">globalQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;i = %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="n">dispatch_group_wait</span><span class="p">(</span><span class="n">group</span><span class="p">,</span> <span class="n">DISPATCH_TIME_FOREVER</span><span class="p">);</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;同步等待群组任务结束...&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>dispatch_group_wait会同步等待任务全部结束，我们可以看看运行结果：</p>

<p><img src="http://cloay.com/images/gcd/gcd_group_wait.png" alt="gcd_sync" /></p>

<p>如果我们不需要等待group任务执行结束，还可以利用dispatch_group_notify异步通知然后再去做相应的操作。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_queue_t</span> <span class="n">globalQueue</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">dispatch_group_t</span> <span class="n">group</span> <span class="o">=</span> <span class="n">dispatch_group_create</span><span class="p">();</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">dispatch_group_async</span><span class="p">(</span><span class="n">group</span><span class="p">,</span> <span class="n">globalQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>            <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;i = %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//group中的任务结束后如果我们还需要异步执行新的任务,利用dispatch_group_notify发出通知消息</span>
</span><span class='line'><span class="n">dispatch_group_notify</span><span class="p">(</span><span class="n">group</span><span class="p">,</span> <span class="n">globalQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;群组任务结束了，接着异步do something...&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">//do something</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;我是main_queue...&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果：</p>

<p><img src="http://cloay.com/images/gcd/gcd_group_notify.png" alt="gcd_sync" /></p>

<p>我们可以使用dispatch_apply函数实现和dispatch_group同样的同步等待运算结束的功能。dispatch_apply会调用单一的block多次进行平行运算，然后等待所有运算结束，运算之间没有相互依赖。具体看代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">arr</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">,</span> <span class="s">@&quot;&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">dispatch_queue_t</span> <span class="n">globalQueue</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">dispatch_apply</span><span class="p">([</span><span class="n">arr</span> <span class="n">count</span><span class="p">],</span> <span class="n">globalQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">(</span><span class="n">size_t</span> <span class="n">index</span><span class="p">){</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;i = %ld&quot;</span><span class="p">,</span> <span class="n">index</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;同步等待apply任务结束...&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>结果和dispatch_group_wait类似的：</p>

<p><img src="http://cloay.com/images/gcd/gcd_apply.png" alt="gcd_sync" /></p>

<h4>4、信号量</h4>

<p>我们可以使用gcd中的dispatch_semaphore实现同步机制，通常用在当几个线程同时访问一个资源，通过信号量来控制访问的线程个数.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">dispatch_semaphore_t</span> <span class="n">semaphore</span> <span class="o">=</span> <span class="n">dispatch_semaphore_create</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">dispatch_queue_t</span> <span class="n">globalQueue</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="n">__block</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">globalQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">dispatch_semaphore_wait</span><span class="p">(</span><span class="n">semaphore</span><span class="p">,</span> <span class="n">DISPATCH_TIME_FOREVER</span><span class="p">);</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;线程1&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">i</span> <span class="o">+=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">15</span><span class="p">);</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;i = %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="n">dispatch_semaphore_signal</span><span class="p">(</span><span class="n">semaphore</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">dispatch_async</span><span class="p">(</span><span class="n">globalQueue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>        <span class="n">dispatch_semaphore_wait</span><span class="p">(</span><span class="n">semaphore</span><span class="p">,</span> <span class="n">DISPATCH_TIME_FOREVER</span><span class="p">);</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;线程2&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;i = %d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>        <span class="n">dispatch_semaphore_signal</span><span class="p">(</span><span class="n">semaphore</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>给线程加上信号量实现了加锁功能，当线程1结束后线程2才能访问资源i。运行结果如下</p>

<p><img src="http://cloay.com/images/gcd/gcd_semaphore.png" alt="gcd_sync" /></p>

<p>常见的GCD用法就这些。</p>

<h3>三、总结</h3>

<p>GCD提供了一种简单实现多线程和并发功能的方式。通过GCD我们可以快速创建并发任务，充分利用多核功能提升程序的性能。希望通过本文的介绍可以对GCD有一个简单的了解并会使用常见功能。</p>

<p>参考链接：</p>

<ul>
<li><a href="http://joearms.github.io/2013/04/05/concurrent-and-parallel-programming.html">Concurrent and Parallel Programming</a></li>
<li><a href="https://developer.apple.com/library/prerelease/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/">Grand Central Dispatch (GCD) Reference</a></li>
<li><a href="http://amattn.com/p/grand_central_dispatch_gcd_summary_syntax_best_practices.html">Grand Central Dispatch (GCD): Summary, Syntax &amp; Best Practices</a></li>
</ul>


<br>


<br>


<br>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[仿QQ5.0Android版 在锁屏桌面显示消息框]]></title>
    <link href="http://cloay.com/blog/2014/08/25/fang-qq5-dot-0androidban-zai-suo-ping-zhuo-mian-xian-shi-xiao-xi-kuang/"/>
    <updated>2014-08-25T21:34:00+08:00</updated>
    <id>http://cloay.com/blog/2014/08/25/fang-qq5-dot-0androidban-zai-suo-ping-zhuo-mian-xian-shi-xiao-xi-kuang</id>
    <content type="html"><![CDATA[<p>QQ5.0 for Android发布一段时间了，UI交互大调整，感受了一下很不习惯。不过新增了一个很赞的功能，当手机处于锁屏状态是有新消息提示时会在桌面显示一个消息框，并且可以直接回复信息，真的很方便。于是试着自己实现该功能。仔细想了想，大致思路如下：</p>


<!-- more -->


<p>后台service监听消息，当消息到达时，判断当前手机是否处于锁屏状态。如果是则在桌面显示消息框。关键点是如何在锁屏桌面显示消息框。我们仔细观察不难发现，QQ并没有直接在桌面显示消息框，而是极有可能替换了锁屏界面。试着尝试了一下基本实现了该功能。新建一个Theme为Wallpaper的Activity，并将布局定义成对话框样式。在onCreate(Bundle savedInstanceState)方法中加入如下代码：</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Window</span> <span class="n">window</span> <span class="o">=</span> <span class="n">getWindow</span><span class="o">();</span>
</span><span class='line'>  <span class="n">window</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span><span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_SHOW_WHEN_LOCKED</span><span class="o">);</span>
</span><span class='line'>  <span class="n">window</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span><span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_TURN_SCREEN_ON</span><span class="o">);</span>
</span><span class='line'>  <span class="n">window</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span><span class="n">WindowManager</span><span class="o">.</span><span class="na">LayoutParams</span><span class="o">.</span><span class="na">FLAG_DISMISS_KEYGUARD</span><span class="o">);</span>
</span><span class='line'>  <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">alert_layout</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">titleTextV</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">msg_title_textV</span><span class="o">);</span>
</span><span class='line'>  <span class="n">titleTextV</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;New message: &quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">msgTextV</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">msg_content_textV</span><span class="o">);</span>
</span><span class='line'>  <span class="n">msgTextV</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;Hi, I am cloay!&quot;</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">cancleBtn</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">alert_cancle_btn</span><span class="o">);</span>
</span><span class='line'>  <span class="n">cancleBtn</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>  <span class="n">okBtn</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">alert_ok_btn</span><span class="o">);</span>
</span><span class='line'>  <span class="n">okBtn</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当消息到达时，弹出对话框。对话框有取消和确定两个按钮，取消按钮点击返回锁屏界面，点击确定按钮进入应用。锁屏需要获取相应权限，新建一个MyAdminReceiver并在清单文件中加入如下代码：</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;receiver</span> <span class="na">android:name=</span><span class="s">&quot;com.cloay.alertnotifidemo.MyAdminReceiver&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">&quot;android.app.device_admin&quot;</span>
</span><span class='line'>            <span class="na">android:resource=</span><span class="s">&quot;@xml/my_admin_receiver&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;intent-filter</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;android.app.action.DEVICE_ADMIN_ENABLED&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/intent-filter&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/receiver&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在MainActivity获取权限：</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DevicePolicyManager</span> <span class="n">policyManager</span> <span class="o">=</span> <span class="o">(</span><span class="n">DevicePolicyManager</span><span class="o">)</span> <span class="n">getSystemService</span><span class="o">(</span><span class="n">DEVICE_POLICY_SERVICE</span><span class="o">);</span>
</span><span class='line'>  <span class="n">ComponentName</span> <span class="n">componentName</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ComponentName</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">MyAdminReceiver</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kt">boolean</span> <span class="n">isAdminActive</span> <span class="o">=</span> <span class="n">policyManager</span><span class="o">.</span><span class="na">isAdminActive</span><span class="o">(</span><span class="n">componentName</span><span class="o">);</span>
</span><span class='line'>  <span class="k">if</span><span class="o">(!</span><span class="n">isAdminActive</span><span class="o">){</span>
</span><span class='line'>      <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">DevicePolicyManager</span><span class="o">.</span><span class="na">ACTION_ADD_DEVICE_ADMIN</span><span class="o">);</span>
</span><span class='line'>      <span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="n">DevicePolicyManager</span><span class="o">.</span><span class="na">EXTRA_DEVICE_ADMIN</span><span class="o">,</span> <span class="n">componentName</span><span class="o">);</span>
</span><span class='line'>      <span class="n">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>当点击了取消按钮后,就可以锁屏了，锁屏之后再让对话框消失</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DevicePolicyManager</span> <span class="n">policyManager</span> <span class="o">=</span> <span class="o">(</span><span class="n">DevicePolicyManager</span><span class="o">)</span> <span class="n">getSystemService</span><span class="o">(</span><span class="n">DEVICE_POLICY_SERVICE</span><span class="o">);</span>
</span><span class='line'>      <span class="n">policyManager</span><span class="o">.</span><span class="na">lockNow</span><span class="o">();</span>
</span><span class='line'>      <span class="k">new</span> <span class="nf">Handler</span><span class="o">().</span><span class="na">postDelayed</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">finish</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">},</span> <span class="mi">1000</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>大致就是这些，实现在锁屏桌面显示消息框。效果如下：</p>


<p><img src="https://raw.githubusercontent.com/cloay/AlertNotifiDemo/master/pic.jpg"/><br>
<a href="https://github.com/cloay/AlertNotifiDemo">完整代码已上传github</a><br></p>

<p>项目中使用Service模仿每隔10秒收到新消息。</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android自定义View展示标签]]></title>
    <link href="http://cloay.com/blog/2014/08/08/androizi-ding-yi-viewzhan-shi-biao-qian/"/>
    <updated>2014-08-08T20:15:00+08:00</updated>
    <id>http://cloay.com/blog/2014/08/08/androizi-ding-yi-viewzhan-shi-biao-qian</id>
    <content type="html"><![CDATA[<p>项目中需要展示一组标签，但没有合适的View组件。于是自定义了一个TagView继承于LinearLayout实现该功能。
效果如图：<br><br>
<img src="https://raw.githubusercontent.com/cloay/CTagView/master/tag.png" width="360" height="640"/></p>

<p>CTagView的实现如下：<br></p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">cloay</span><span class="o">.</span><span class="na">ctagviewdemo</span><span class="o">.</span><span class="na">widget</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.cloay.ctagviewdemo.R</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.annotation.SuppressLint</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.graphics.Color</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.AttributeSet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.DisplayMetrics</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.Button</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.LinearLayout</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * @ClassName: CTagView </span>
</span><span class='line'><span class="cm"> * @Description: A costum view for tag list </span>
</span><span class='line'><span class="cm"> * @author cloay Email:shangrody@gmail.com </span>
</span><span class='line'><span class="cm"> * @date 2014-8-5 ÉÏÎç10:43:22 </span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CTagView</span> <span class="kd">extends</span> <span class="n">LinearLayout</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DEFAULT_TAG_HEIGHT</span> <span class="o">=</span> <span class="mi">35</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DEFAULT_BUTTON_MARGIN</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DEFAULT_BUTTON_PADDING</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DEFAULT_BUTTON_PADDING_TOP</span> <span class="o">=</span> <span class="mi">6</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DEFAULT_LAYOUT_MARGIN_TOP</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">Context</span> <span class="n">mContext</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">OnTagClickListener</span> <span class="n">onTagClickerListener</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">CTagView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>      <span class="n">setOrientation</span><span class="o">(</span><span class="n">VERTICAL</span><span class="o">);</span>       <span class="c1">//set orientation vertical</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">CTagView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">){</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@SuppressLint</span><span class="o">(</span><span class="s">&quot;NewApi&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">CTagView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">defStyle</span><span class="o">){</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">,</span> <span class="n">defStyle</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @Name: setTags </span>
</span><span class='line'><span class="cm">  * @Description:  </span>
</span><span class='line'><span class="cm">  * @param tags</span>
</span><span class='line'><span class="cm">  * @return void  </span>
</span><span class='line'><span class="cm">  *</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="nd">@SuppressWarnings</span><span class="o">(</span><span class="s">&quot;deprecation&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTags</span><span class="o">(</span><span class="n">String</span> <span class="o">[]</span><span class="n">tags</span><span class="o">){</span>
</span><span class='line'>      <span class="n">removeAllViews</span><span class="o">();</span> <span class="c1">//remove all old views, at first</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">tags</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">){</span>
</span><span class='line'>          <span class="n">LinearLayout</span> <span class="n">tempLayout</span>  <span class="o">=</span> <span class="k">new</span> <span class="n">LinearLayout</span><span class="o">(</span><span class="n">mContext</span><span class="o">);</span>
</span><span class='line'>          <span class="n">tempLayout</span><span class="o">.</span><span class="na">setLayoutParams</span><span class="o">(</span><span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span> <span class="n">LayoutParams</span><span class="o">.</span><span class="na">WRAP_CONTENT</span><span class="o">));</span>
</span><span class='line'>          <span class="n">addView</span><span class="o">(</span><span class="n">tempLayout</span><span class="o">);</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">tempWidth</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>          <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">tags</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
</span><span class='line'>              <span class="kd">final</span> <span class="n">String</span> <span class="n">tagStr</span> <span class="o">=</span> <span class="n">tags</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>              <span class="n">Button</span> <span class="n">button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Button</span><span class="o">(</span><span class="n">mContext</span><span class="o">);</span>
</span><span class='line'>              <span class="n">button</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">tagStr</span><span class="o">);</span>
</span><span class='line'>              <span class="n">button</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">parseColor</span><span class="o">(</span><span class="s">&quot;#666666&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="n">button</span><span class="o">.</span><span class="na">setTextSize</span><span class="o">(</span><span class="mi">15</span><span class="o">);</span>
</span><span class='line'>              <span class="n">button</span><span class="o">.</span><span class="na">setPadding</span><span class="o">(</span><span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING</span><span class="o">),</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING_TOP</span><span class="o">),</span>
</span><span class='line'>                      <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING</span><span class="o">),</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING_TOP</span><span class="o">));</span>
</span><span class='line'>              <span class="n">button</span><span class="o">.</span><span class="na">setBackgroundDrawable</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">tag_bg</span><span class="o">));</span>
</span><span class='line'>              <span class="n">button</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                  
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="k">if</span><span class="o">(</span><span class="n">onTagClickerListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
</span><span class='line'>                          <span class="n">onTagClickerListener</span><span class="o">.</span><span class="na">onTagClick</span><span class="o">(</span><span class="n">tagStr</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">});</span>
</span><span class='line'>              
</span><span class='line'>              <span class="kt">int</span> <span class="n">btnWidth</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="mi">2</span><span class="o">*</span><span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING</span><span class="o">)</span> <span class="o">+</span> <span class="n">button</span><span class="o">.</span><span class="na">getPaint</span><span class="o">().</span><span class="na">measureText</span><span class="o">(</span><span class="n">button</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">()));</span>
</span><span class='line'>              <span class="n">LayoutParams</span> <span class="n">layoutParams</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">btnWidth</span><span class="o">,</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_TAG_HEIGHT</span><span class="o">));</span>
</span><span class='line'>              <span class="n">layoutParams</span><span class="o">.</span><span class="na">leftMargin</span> <span class="o">=</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_MARGIN</span><span class="o">);</span>
</span><span class='line'>              <span class="n">tempWidth</span> <span class="o">+=</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_MARGIN</span><span class="o">)</span> <span class="o">+</span> <span class="n">btnWidth</span><span class="o">;</span> <span class="c1">//add tag width</span>
</span><span class='line'>              <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;CTagView&quot;</span><span class="o">,</span> <span class="s">&quot;width:&quot;</span> <span class="o">+</span> <span class="n">tempWidth</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">//the last tag margin right DEFAULT_BUTTON_MARGIN, don&#39;t forget</span>
</span><span class='line'>              <span class="k">if</span><span class="o">(</span><span class="n">tempWidth</span> <span class="o">+</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_MARGIN</span><span class="o">)</span> <span class="o">&gt;</span> <span class="n">getDeviceWidth</span><span class="o">()){</span>  <span class="c1">//if out of screen, add a new layout </span>
</span><span class='line'>                  <span class="n">tempLayout</span>  <span class="o">=</span> <span class="k">new</span> <span class="n">LinearLayout</span><span class="o">(</span><span class="n">mContext</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">LayoutParams</span> <span class="n">lParams</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">MATCH_PARENT</span><span class="o">,</span> <span class="n">LayoutParams</span><span class="o">.</span><span class="na">WRAP_CONTENT</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">lParams</span><span class="o">.</span><span class="na">topMargin</span> <span class="o">=</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_LAYOUT_MARGIN_TOP</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">tempLayout</span><span class="o">.</span><span class="na">setLayoutParams</span><span class="o">(</span><span class="n">lParams</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">addView</span><span class="o">(</span><span class="n">tempLayout</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">tempWidth</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="mi">2</span><span class="o">*</span><span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING</span><span class="o">)</span> <span class="o">+</span> <span class="n">button</span><span class="o">.</span><span class="na">getPaint</span><span class="o">().</span><span class="na">measureText</span><span class="o">(</span><span class="n">button</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">()));</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="n">tempLayout</span><span class="o">.</span><span class="na">addView</span><span class="o">(</span><span class="n">button</span><span class="o">,</span> <span class="n">layoutParams</span><span class="o">);</span>
</span><span class='line'>              <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="s">&quot;CTagView&quot;</span><span class="o">,</span> <span class="s">&quot;button:&quot;</span> <span class="o">+</span> <span class="n">button</span><span class="o">.</span><span class="na">getWidth</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class='line'>          <span class="n">Button</span> <span class="n">button</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Button</span><span class="o">(</span><span class="n">mContext</span><span class="o">);</span>
</span><span class='line'>          <span class="n">button</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;No tags&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">button</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">Color</span><span class="o">.</span><span class="na">parseColor</span><span class="o">(</span><span class="s">&quot;#666666&quot;</span><span class="o">));</span>
</span><span class='line'>          <span class="n">button</span><span class="o">.</span><span class="na">setTextSize</span><span class="o">(</span><span class="mi">15</span><span class="o">);</span>
</span><span class='line'>          <span class="n">button</span><span class="o">.</span><span class="na">setPadding</span><span class="o">(</span><span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING</span><span class="o">),</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING_TOP</span><span class="o">),</span>
</span><span class='line'>                  <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING</span><span class="o">),</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_PADDING_TOP</span><span class="o">));</span>
</span><span class='line'>          <span class="n">button</span><span class="o">.</span><span class="na">setBackgroundDrawable</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getDrawable</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">tag_bg</span><span class="o">));</span>
</span><span class='line'>          <span class="n">LayoutParams</span> <span class="n">layoutParams</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">LayoutParams</span><span class="o">.</span><span class="na">WRAP_CONTENT</span><span class="o">,</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_TAG_HEIGHT</span><span class="o">));</span>
</span><span class='line'>          <span class="n">layoutParams</span><span class="o">.</span><span class="na">leftMargin</span> <span class="o">=</span> <span class="n">dip2px</span><span class="o">(</span><span class="n">DEFAULT_BUTTON_MARGIN</span><span class="o">);</span>
</span><span class='line'>          <span class="n">addView</span><span class="o">(</span><span class="n">button</span><span class="o">,</span> <span class="n">layoutParams</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @Name: setOnTagClickListener </span>
</span><span class='line'><span class="cm">  * @Description:  </span>
</span><span class='line'><span class="cm">  * @param listener</span>
</span><span class='line'><span class="cm">  *</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOnTagClickListener</span><span class="o">(</span><span class="n">OnTagClickListener</span> <span class="n">listener</span><span class="o">){</span>
</span><span class='line'>      <span class="n">onTagClickerListener</span> <span class="o">=</span> <span class="n">listener</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @ClassName: TagClickerListener </span>
</span><span class='line'><span class="cm">  * @Description: this is a interface </span>
</span><span class='line'><span class="cm">  * @author cloay Email:shangrody@gmail.com </span>
</span><span class='line'><span class="cm">  * @date 2014-8-5 ÉÏÎç10:40:07 </span>
</span><span class='line'><span class="cm">  *</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">interface</span> <span class="nc">OnTagClickListener</span><span class="o">{</span>
</span><span class='line'>      <span class="cm">/**</span>
</span><span class='line'><span class="cm">      * </span>
</span><span class='line'><span class="cm">      * @Name: onTagClick</span>
</span><span class='line'><span class="cm">      * @Description: Callback this after tag was clicked </span>
</span><span class='line'><span class="cm">      * @param tag</span>
</span><span class='line'><span class="cm">      *</span>
</span><span class='line'><span class="cm">      */</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onTagClick</span><span class="o">(</span><span class="n">String</span> <span class="n">tag</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @Name: getDeviceWidth </span>
</span><span class='line'><span class="cm">  * @Description: get device width</span>
</span><span class='line'><span class="cm">  * @return int    </span>
</span><span class='line'><span class="cm">  *</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">getDeviceWidth</span><span class="o">(){</span>
</span><span class='line'>      <span class="n">DisplayMetrics</span> <span class="n">metrics</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DisplayMetrics</span><span class="o">();</span>
</span><span class='line'>      <span class="o">((</span><span class="n">Activity</span><span class="o">)</span><span class="n">mContext</span><span class="o">).</span><span class="na">getWindowManager</span><span class="o">().</span><span class="na">getDefaultDisplay</span><span class="o">().</span><span class="na">getMetrics</span><span class="o">(</span><span class="n">metrics</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">metrics</span><span class="o">.</span><span class="na">widthPixels</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @Name: dip2px </span>
</span><span class='line'><span class="cm">  * @Description: dip to px</span>
</span><span class='line'><span class="cm">  * @param dipValue</span>
</span><span class='line'><span class="cm">  * @return int  </span>
</span><span class='line'><span class="cm">  *</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">dip2px</span><span class="o">(</span><span class="kt">float</span> <span class="n">dipValue</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">final</span> <span class="kt">float</span> <span class="n">scale</span> <span class="o">=</span> <span class="n">mContext</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getDisplayMetrics</span><span class="o">().</span><span class="na">density</span><span class="o">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">dipValue</span> <span class="o">*</span> <span class="n">scale</span> <span class="o">+</span> <span class="mf">0.5f</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用是很简单，像LinearLayout一样。<br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/container&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:background=</span><span class="s">&quot;#ffffff&quot;</span>
</span><span class='line'>    <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;TextView</span> <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:gravity=</span><span class="s">&quot;center&quot;</span>
</span><span class='line'>        <span class="na">android:layout_margin=</span><span class="s">&quot;10dp&quot;</span>
</span><span class='line'>        <span class="na">android:textSize=</span><span class="s">&quot;24sp&quot;</span>
</span><span class='line'>        <span class="na">android:text=</span><span class="s">&quot;标签:&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;com.cloay.ctagviewdemo.widget.CTagView</span>
</span><span class='line'>        <span class="na">android:id=</span><span class="s">&quot;@+id/tag_view&quot;</span>
</span><span class='line'>        <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>        <span class="na">android:orientation=</span><span class="s">&quot;vertical&quot;</span>
</span><span class='line'>        <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/LinearLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>添加标签<br></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">String</span><span class="o">[]</span> <span class="n">tags</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;音乐&quot;</span><span class="o">,</span> <span class="s">&quot;文艺范&quot;</span><span class="o">,</span> <span class="s">&quot;科幻&quot;</span><span class="o">,</span> <span class="s">&quot;二逼青年&quot;</span><span class="o">,</span> <span class="s">&quot;搞笑&quot;</span><span class="o">,</span> <span class="s">&quot;清新&quot;</span><span class="o">,</span> <span class="s">&quot;猴子请来的逗比&quot;</span><span class="o">,</span> <span class="s">&quot;NBA&quot;</span><span class="o">,</span> <span class="s">&quot;卡哇伊&quot;</span><span class="o">,</span> <span class="s">&quot;电影&quot;</span><span class="o">,</span> <span class="s">&quot;自定义标签&quot;</span><span class="o">};</span>
</span><span class='line'><span class="n">CTagView</span> <span class="n">tagView</span> <span class="o">=</span> <span class="o">(</span><span class="n">CTagView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tag_view</span><span class="o">);</span>
</span><span class='line'><span class="n">tagView</span><span class="o">.</span><span class="na">setOnTagClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'><span class="n">tagView</span><span class="o">.</span><span class="na">setTags</span><span class="o">(</span><span class="n">tags</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>代码已上传github:<a href="https://github.com/cloay/CTagView">CTagView</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用SwipeRefreshLayout和LoadMoreListView实现下拉刷新和上拉加载更多]]></title>
    <link href="http://cloay.com/blog/2014/07/23/li-yong-swiperefreshlayouthe-loadmorelistviewshi-xian-xia-la-shua-xin-he-shang-la-jia-zai-geng-duo/"/>
    <updated>2014-07-23T20:49:00+08:00</updated>
    <id>http://cloay.com/blog/2014/07/23/li-yong-swiperefreshlayouthe-loadmorelistviewshi-xian-xia-la-shua-xin-he-shang-la-jia-zai-geng-duo</id>
    <content type="html"><![CDATA[<p>Google自己的下拉刷新组件SwipeRefreshLayout非常nice。和LoadMoreListView结合使用，可以非常容易的实现常用的下拉刷新和上拉加载更多功能。以下是一个简单的Demo。</p>


<p>布局如下:</>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;FrameLayout</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>      <span class="na">xmlns:tools=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>          <span class="na">android:id=</span><span class="s">&quot;@+id/container&quot;</span>
</span><span class='line'>      <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>        <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="na">tools:context=</span><span class="s">&quot;com.cloay.stunningrefreshloadmoredemo.MainActivity&quot;</span>
</span><span class='line'>      <span class="na">tools:ignore=</span><span class="s">&quot;MergeRootFrame&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;android.support.v4.widget.SwipeRefreshLayout</span>
</span><span class='line'>      <span class="na">android:id=</span><span class="s">&quot;@+id/swipe_refresh&quot;</span>
</span><span class='line'>          <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>          <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;com.cloay.stunningrefreshloadmoredemo.widgets.LoadMoreListView</span>
</span><span class='line'>                 <span class="na">android:id=</span><span class="s">&quot;@+id/listview&quot;</span>
</span><span class='line'>               <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>               <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/com.cloay.stunningrefreshloadmoredemo.widgets.LoadMoreListView&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/android.support.v4.widget.SwipeRefreshLayout&gt;</span>
</span><span class='line'><span class="nt">&lt;/FrameLayout&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>主要代码</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">ActionBarActivity</span> <span class="kd">implements</span> <span class="n">OnRefreshListener</span><span class="o">,</span> <span class="n">OnLoadMoreListener</span><span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SwipeRefreshLayout</span> <span class="n">swipeLayout</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">LoadMoreListView</span> <span class="n">listView</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">MyAdapter</span> <span class="n">adapter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">swipeLayout</span> <span class="o">=</span> <span class="o">(</span><span class="n">SwipeRefreshLayout</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">swipe_refresh</span><span class="o">);</span>
</span><span class='line'>        <span class="n">swipeLayout</span><span class="o">.</span><span class="na">setOnRefreshListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// set style  </span>
</span><span class='line'>        <span class="n">swipeLayout</span><span class="o">.</span><span class="na">setColorScheme</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">holo_red_light</span><span class="o">,</span> <span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">holo_green_light</span><span class="o">,</span>
</span><span class='line'>                <span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">holo_blue_bright</span><span class="o">,</span> <span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">holo_orange_light</span><span class="o">);</span>
</span><span class='line'>        <span class="n">listView</span> <span class="o">=</span> <span class="o">(</span><span class="n">LoadMoreListView</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">listview</span><span class="o">);</span>
</span><span class='line'>        <span class="n">listView</span><span class="o">.</span><span class="na">setOnLoadMoreListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>        <span class="n">adapter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MyAdapter</span><span class="o">();</span>
</span><span class='line'>        <span class="n">listView</span><span class="o">.</span><span class="na">setAdapter</span><span class="o">(</span><span class="n">adapter</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onRefresh</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">new</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="n">Void</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">*</span><span class="mi">1000</span><span class="o">);</span> <span class="c1">//sleep 3 seconds</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">Void</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">adapter</span><span class="o">.</span><span class="na">count</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
</span><span class='line'>              <span class="n">adapter</span><span class="o">.</span><span class="na">notifyDataSetChanged</span><span class="o">();</span>
</span><span class='line'>              <span class="n">swipeLayout</span><span class="o">.</span><span class="na">setRefreshing</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>              <span class="n">listView</span><span class="o">.</span><span class="na">setCanLoadMore</span><span class="o">(</span><span class="n">adapter</span><span class="o">.</span><span class="na">count</span> <span class="o">&lt;</span> <span class="mi">45</span><span class="o">);</span>
</span><span class='line'>              <span class="kd">super</span><span class="o">.</span><span class="na">onPostExecute</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onLoadMore</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">new</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="n">Void</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">3</span><span class="o">*</span><span class="mi">1000</span><span class="o">);</span>    <span class="c1">//sleep 3 seconds</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">Void</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">adapter</span><span class="o">.</span><span class="na">count</span> <span class="o">+=</span> <span class="mi">15</span><span class="o">;</span>
</span><span class='line'>              <span class="n">adapter</span><span class="o">.</span><span class="na">notifyDataSetChanged</span><span class="o">();</span>
</span><span class='line'>              <span class="n">listView</span><span class="o">.</span><span class="na">setCanLoadMore</span><span class="o">(</span><span class="n">adapter</span><span class="o">.</span><span class="na">count</span> <span class="o">&lt;</span> <span class="mi">45</span><span class="o">);</span>
</span><span class='line'>              <span class="n">listView</span><span class="o">.</span><span class="na">onLoadMoreComplete</span><span class="o">();</span>
</span><span class='line'>              <span class="kd">super</span><span class="o">.</span><span class="na">onPostExecute</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">}.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">class</span> <span class="nc">MyAdapter</span> <span class="kd">extends</span> <span class="n">BaseAdapter</span><span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">15</span><span class="o">;</span>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="n">Object</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getItemId</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">public</span> <span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="n">View</span> <span class="n">convertView</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">parent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ViewHolder</span> <span class="n">holder</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">convertView</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">holder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ViewHolder</span><span class="o">();</span>
</span><span class='line'>              <span class="n">convertView</span> <span class="o">=</span> <span class="n">LayoutInflater</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">).</span><span class="na">inflate</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">simple_list_item_1</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>              <span class="n">holder</span><span class="o">.</span><span class="na">textV</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">convertView</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">text1</span><span class="o">);</span>
</span><span class='line'>              <span class="n">convertView</span><span class="o">.</span><span class="na">setTag</span><span class="o">(</span><span class="n">holder</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class='line'>              <span class="n">holder</span> <span class="o">=</span> <span class="o">(</span><span class="n">ViewHolder</span><span class="o">)</span> <span class="n">convertView</span><span class="o">.</span><span class="na">getTag</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">holder</span><span class="o">.</span><span class="na">textV</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;This is &quot;</span> <span class="o">+</span> <span class="o">(</span><span class="n">position</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot; line.&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">convertView</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">private</span> <span class="kd">class</span> <span class="nc">ViewHolder</span><span class="o">{</span>
</span><span class='line'>          <span class="n">TextView</span> <span class="n">textV</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>效果还不错，小伙伴可以试试哦！Demo已上传Github: <a href="https://github.com/cloay/StunningPullRefreshAndLoadMore">StunningPullRefreshAndLoadMoreDemo</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pagecontrolandroid中的实现]]></title>
    <link href="http://cloay.com/blog/2014/05/15/pagecontrolandroidzhong-de-shi-xian/"/>
    <updated>2014-05-15T22:46:00+08:00</updated>
    <id>http://cloay.com/blog/2014/05/15/pagecontrolandroidzhong-de-shi-xian</id>
    <content type="html"><![CDATA[<p>Android中没有PageControl控件 自己实现如下：</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PageControl</span> <span class="kd">extends</span> <span class="n">LinearLayout</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">selected</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">nomal_icon_id</span> <span class="o">=</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">pagecontro_icon_normal</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">foucsed_icon_id</span> <span class="o">=</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">pagecontro_icon_foucsed</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Context</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">PageControl</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">context</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">PageControl</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">){</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">context</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>      <span class="n">generateView</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">PageControl</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kt">int</span> <span class="n">count</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">count</span> <span class="o">=</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">context</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>      <span class="n">generateView</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">generateView</span><span class="o">(){</span>
</span><span class='line'>      <span class="n">removeAllViews</span><span class="o">();</span>
</span><span class='line'>      <span class="n">LayoutParams</span> <span class="n">params</span> <span class="o">=</span>  <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getDimensionPixelSize</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">dimen</span><span class="o">.</span><span class="na">home_banner_pagecontrol_shape</span><span class="o">),</span>
</span><span class='line'>              <span class="n">context</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getDimensionPixelSize</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">dimen</span><span class="o">.</span><span class="na">home_banner_pagecontrol_shape</span><span class="o">));</span>
</span><span class='line'>      <span class="n">params</span><span class="o">.</span><span class="na">setMargins</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span> <span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
</span><span class='line'>          <span class="n">ImageView</span> <span class="n">indicatorV</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ImageView</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">selected</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">indicatorV</span><span class="o">.</span><span class="na">setImageResource</span><span class="o">(</span><span class="n">foucsed_icon_id</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class='line'>              <span class="n">indicatorV</span><span class="o">.</span><span class="na">setImageResource</span><span class="o">(</span><span class="n">nomal_icon_id</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">addView</span><span class="o">(</span><span class="n">indicatorV</span><span class="o">,</span> <span class="n">params</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCount</span><span class="o">(</span><span class="kt">int</span> <span class="n">count</span><span class="o">){</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">count</span> <span class="o">=</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>      <span class="n">generateView</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSelected</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">){</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">selected</span> <span class="o">=</span> <span class="n">index</span><span class="o">;</span>
</span><span class='line'>      <span class="n">generateView</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setIconId</span><span class="o">(</span><span class="kt">int</span> <span class="n">nomalId</span><span class="o">,</span> <span class="kt">int</span> <span class="n">foucsedId</span><span class="o">){</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">nomal_icon_id</span> <span class="o">=</span> <span class="n">nomalId</span><span class="o">;</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">foucsed_icon_id</span> <span class="o">=</span> <span class="n">foucsedId</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>直接在布局中定义就可以使用了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基本加密算法]]></title>
    <link href="http://cloay.com/blog/2014/04/25/ji-ben-jia-mi-suan-fa/"/>
    <updated>2014-04-25T23:24:00+08:00</updated>
    <id>http://cloay.com/blog/2014/04/25/ji-ben-jia-mi-suan-fa</id>
    <content type="html"><![CDATA[<h3>基本加密算法-安全散列算法</h3>


<br>SHA（Secure Hash Algorithm，SHA)安全散列法<br>


<p>SHA-1是一种数据加密算法，该算法的思想是接收一段明文，然后以一种不可逆的方式将它转换成一段（通常更小）密文>，也可以简单的理解为取一串输入码（称为预映射或信息），并把它们转化为长度较短、位数固定的输出序列即散列值（也>称为信息摘要或信息认证代码）的过程。</p>


<!-- more -->


<p>通过散列算法可实现数字签名实现，数字签名的原理是将要传送的明文通过一种函数运算（Hash）转换成报文摘要（不同
的明文对应不同的报文摘要），报文摘要加密后与明文一起传送给接受方，接受方将接受的明文产生新的报文摘要与发送方>的发来报文摘要解密比较，比较结果一致表示明文未被改动，如果不一致表示明文已被篡改。
MAC （信息认证代码）就是一个散列结果，其中部分输入信息是密码，只有知道这个密码的参与者才能再次计算和验证MAC码
的合法性。</p>


<p>ruby实现
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="n">digest</span> <span class="o">=</span> <span class="ss">OpenSSL</span><span class="p">:</span><span class="ss">:Digest</span><span class="o">::</span><span class="no">Digest</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;sha1&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">signature</span> <span class="o">=</span> <span class="ss">OpenSSL</span><span class="p">:</span><span class="ss">:HMAC</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="n">digest</span><span class="p">,</span> <span class="n">secret_key</span><span class="p">,</span> <span class="n">json_str</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;signature = </span><span class="si">#{</span><span class="n">signature</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>
java实现
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="n">SecretKey</span> <span class="n">secretKey</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SecretKeySpec</span><span class="o">(</span><span class="n">signature_key</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(),</span> <span class="s">&quot;HmacSHA1&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Mac</span> <span class="n">mac</span> <span class="o">=</span> <span class="n">Mac</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="n">secretKey</span><span class="o">.</span><span class="na">getAlgorithm</span><span class="o">());</span>
</span><span class='line'>    <span class="n">mac</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">secretKey</span><span class="o">);</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">mac</span><span class="o">.</span><span class="na">doFinal</span><span class="o">(</span><span class="n">inputStr</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>
常见算法：MD5(Message Digest algorithm 5，信息摘要算法)，SHA(Secure Hash Algorithm，安全散列算法)，HMAC(Hash Message Authentication Code，散列消息鉴别码)。
</p>


<p>1、于服务器确定算法,使用公开函数和确定的秘钥作为认证标示<br> 2、生成签名秘钥加入传送数据中<br>3、接收方校验信
息是否一致<br></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[仿网易新闻点击图片放大动画]]></title>
    <link href="http://cloay.com/blog/2014/01/20/fang-wang-yi-xin-wen-dian-ji-tu-pian-fang-da-dong-hua/"/>
    <updated>2014-01-20T21:16:00+08:00</updated>
    <id>http://cloay.com/blog/2014/01/20/fang-wang-yi-xin-wen-dian-ji-tu-pian-fang-da-dong-hua</id>
    <content type="html"><![CDATA[<p>点击新闻中小图，从图片位置以动画的方式逐渐移动到屏幕中心并放大图片<br/>
具体实现：<br/></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">browerImage</span><span class="o">(</span><span class="n">Activity</span> <span class="n">activity</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ImageView</span> <span class="n">originImageV</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ImageView</span> <span class="n">scaleImageV</span><span class="o">){</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">originImageV</span><span class="o">.</span><span class="na">getLeft</span><span class="o">();</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">originImageV</span><span class="o">.</span><span class="na">getTop</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">browerImage</span><span class="o">(</span><span class="n">Activity</span> <span class="n">activity</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ImageView</span> <span class="n">originImageV</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ImageView</span> <span class="n">scaleImageV</span><span class="o">){</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">originImageV</span><span class="o">.</span><span class="na">getLeft</span><span class="o">();</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">originImageV</span><span class="o">.</span><span class="na">getTop</span><span class="o">();</span>
</span><span class='line'>            <span class="n">DisplayMetrics</span> <span class="n">metrics</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DisplayMetrics</span><span class="o">();</span>
</span><span class='line'>            <span class="n">activity</span><span class="o">.</span><span class="na">getWindowManager</span><span class="o">().</span><span class="na">getDefaultDisplay</span><span class="o">().</span><span class="na">getMetrics</span><span class="o">(</span><span class="n">metrics</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">width</span> <span class="o">=</span> <span class="n">metrics</span><span class="o">.</span><span class="na">widthPixels</span><span class="o">;</span>
</span><span class='line'>            <span class="n">AnimationSet</span> <span class="n">animationSet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AnimationSet</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">TranslateAnimation</span> <span class="n">translateAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TranslateAnimation</span><span class="o">(</span>
</span><span class='line'>            <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span>
</span><span class='line'>            <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span>
</span><span class='line'>            <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span>
</span><span class='line'>            <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="n">scaleImageV</span><span class="o">.</span><span class="na">getY</span><span class="o">()</span> <span class="o">-</span> <span class="n">getStatusBarHeight</span><span class="o">(</span><span class="n">activity</span><span class="o">));</span>
</span><span class='line'>    <span class="n">translateAnimation</span><span class="o">.</span><span class="na">setDuration</span><span class="o">(</span><span class="mi">1500</span><span class="o">);</span>
</span><span class='line'>    <span class="n">animationSet</span><span class="o">.</span><span class="na">addAnimation</span><span class="o">(</span><span class="n">translateAnimation</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ScaleAnimation</span> <span class="n">scaleAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ScaleAnimation</span><span class="o">(</span><span class="mf">1.0f</span><span class="o">,</span> <span class="o">(</span><span class="kt">float</span><span class="o">)</span><span class="n">width</span><span class="o">/</span><span class="n">originImageV</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="mf">1.0f</span><span class="o">,</span>
</span><span class='line'>                    <span class="o">(</span><span class="kt">float</span><span class="o">)</span><span class="n">width</span><span class="o">/</span><span class="n">originImageV</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span>
</span><span class='line'>                    <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span>
</span><span class='line'>            <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>    <span class="n">scaleAnimation</span><span class="o">.</span><span class="na">setDuration</span><span class="o">(</span><span class="mi">1500</span><span class="o">);</span>
</span><span class='line'>    <span class="n">animationSet</span><span class="o">.</span><span class="na">addAnimation</span><span class="o">(</span><span class="n">scaleAnimation</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">animationSet</span><span class="o">.</span><span class="na">setFillEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>    <span class="n">animationSet</span><span class="o">.</span><span class="na">setAnimationListener</span><span class="o">(</span><span class="k">new</span> <span class="n">AnimationListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="nd">@Override</span>
</span><span class='line'>                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationStart</span><span class="o">(</span><span class="n">Animation</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                    <span class="nd">@Override</span>
</span><span class='line'>                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationRepeat</span><span class="o">(</span><span class="n">Animation</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                    <span class="nd">@Override</span>
</span><span class='line'>                    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationEnd</span><span class="o">(</span><span class="n">Animation</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">originImageV</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">INVISIBLE</span><span class="o">);</span>
</span><span class='line'>                            <span class="n">scaleImageV</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span><span class="o">);</span>
</span><span class='line'>                            <span class="n">originImageV</span><span class="o">.</span><span class="na">clearAnimation</span><span class="o">();</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>            <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">originImageV</span><span class="o">.</span><span class="na">startAnimation</span><span class="o">(</span><span class="n">animationSet</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>点击大图返回动画<br/></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">closeImage</span><span class="o">(</span><span class="n">Activity</span> <span class="n">activity</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ImageView</span> <span class="n">originImageV</span><span class="o">,</span> <span class="kd">final</span> <span class="n">ImageView</span> <span class="n">scaleImageV</span><span class="o">){</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">originX</span> <span class="o">=</span> <span class="n">originImageV</span><span class="o">.</span><span class="na">getLeft</span><span class="o">();</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">originY</span> <span class="o">=</span> <span class="n">originImageV</span><span class="o">.</span><span class="na">getTop</span><span class="o">();</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">scaleX</span> <span class="o">=</span> <span class="n">scaleImageV</span><span class="o">.</span><span class="na">getLeft</span><span class="o">();</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">scaleY</span> <span class="o">=</span> <span class="n">scaleImageV</span><span class="o">.</span><span class="na">getTop</span><span class="o">();</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;scaleY: &quot;</span> <span class="o">+</span> <span class="n">scaleY</span> <span class="o">+</span> <span class="s">&quot; bottom: &quot;</span> <span class="o">+</span> <span class="n">scaleImageV</span><span class="o">.</span><span class="na">getBottom</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">AnimationSet</span> <span class="n">animationSet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AnimationSet</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">TranslateAnimation</span> <span class="n">translateAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TranslateAnimation</span><span class="o">(</span>
</span><span class='line'>                <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="n">scaleX</span><span class="o">,</span>
</span><span class='line'>                <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="n">originX</span><span class="o">,</span>
</span><span class='line'>                <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="n">scaleY</span> <span class="o">-</span> <span class="n">getStatusBarHeight</span><span class="o">(</span><span class="n">activity</span><span class="o">),</span>
</span><span class='line'>                <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="n">originY</span><span class="o">);</span>
</span><span class='line'>        <span class="n">translateAnimation</span><span class="o">.</span><span class="na">setDuration</span><span class="o">(</span><span class="mi">1500</span><span class="o">);</span>
</span><span class='line'>        <span class="n">animationSet</span><span class="o">.</span><span class="na">addAnimation</span><span class="o">(</span><span class="n">translateAnimation</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ScaleAnimation</span> <span class="n">scaleAnimation</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ScaleAnimation</span><span class="o">((</span><span class="kt">float</span><span class="o">)</span><span class="n">scaleImageV</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="n">originImageV</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="mf">1.0f</span><span class="o">,</span>
</span><span class='line'>                        <span class="o">(</span><span class="kt">float</span><span class="o">)</span><span class="n">scaleImageV</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()/</span><span class="n">originImageV</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="mf">1.0f</span><span class="o">,</span>
</span><span class='line'>                        <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span>
</span><span class='line'>                <span class="n">Animation</span><span class="o">.</span><span class="na">ABSOLUTE</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="n">scaleAnimation</span><span class="o">.</span><span class="na">setDuration</span><span class="o">(</span><span class="mi">1500</span><span class="o">);</span>
</span><span class='line'>        <span class="n">animationSet</span><span class="o">.</span><span class="na">addAnimation</span><span class="o">(</span><span class="n">scaleAnimation</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">animationSet</span><span class="o">.</span><span class="na">setFillEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="n">animationSet</span><span class="o">.</span><span class="na">setAnimationListener</span><span class="o">(</span><span class="k">new</span> <span class="n">AnimationListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                        <span class="nd">@Override</span>
</span><span class='line'>                        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationStart</span><span class="o">(</span><span class="n">Animation</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                                <span class="n">scaleImageV</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">INVISIBLE</span><span class="o">);</span>
</span><span class='line'>                                <span class="n">originImageV</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span><span class="o">);</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                        <span class="nd">@Override</span>
</span><span class='line'>                        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationRepeat</span><span class="o">(</span><span class="n">Animation</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                        <span class="nd">@Override</span>
</span><span class='line'>                        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationEnd</span><span class="o">(</span><span class="n">Animation</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                                <span class="n">originImageV</span><span class="o">.</span><span class="na">clearAnimation</span><span class="o">();</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">originImageV</span><span class="o">.</span><span class="na">startAnimation</span><span class="o">(</span><span class="n">animationSet</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>下面是获取状态栏高度<br/></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">        * @Title: getStatusBarHeight </span>
</span><span class='line'><span class="cm">        * @Description:  </span>
</span><span class='line'><span class="cm">        * @param activity</span>
</span><span class='line'><span class="cm">        * @return int     </span>
</span><span class='line'><span class="cm">         */</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getStatusBarHeight</span><span class="o">(</span><span class="n">Activity</span> <span class="n">activity</span><span class="o">){</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>                   <span class="kt">int</span> <span class="n">resourceId</span> <span class="o">=</span> <span class="n">activity</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getIdentifier</span><span class="o">(</span><span class="s">&quot;status_bar_height&quot;</span><span class="o">,</span> <span class="s">&quot;dimen&quot;</span><span class="o">,</span> <span class="s">&quot;android&quot;</span><span class="o">);</span>
</span><span class='line'>                   <span class="k">if</span> <span class="o">(</span><span class="n">resourceId</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">result</span> <span class="o">=</span> <span class="n">activity</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getDimensionPixelSize</span><span class="o">(</span><span class="n">resourceId</span><span class="o">);</span>
</span><span class='line'>                   <span class="o">}</span>
</span><span class='line'>                   <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS应用开发常用第三方库]]></title>
    <link href="http://cloay.com/blog/2013/12/15/iosying-yong-kai-fa-chang-yong-di-san-fang-ku/"/>
    <updated>2013-12-15T22:38:00+08:00</updated>
    <id>http://cloay.com/blog/2013/12/15/iosying-yong-kai-fa-chang-yong-di-san-fang-ku</id>
    <content type="html"><![CDATA[<h1>我收集的iOS开发中常用的第三方开源库</h1>


<h3>1、AFNetworking</h3>


<p>AFNetworking 被评为2013年最受欢迎的第三方库github地址：<a href="http://github.com/AFNetworking/AFNetworking" >AFNetworking</a>
</p>


<!-- more -->


<h3>2、MBProgressHUD</h3>


<p>自定义进度条，信息提示类似Android中的Toast  github地址：<a href="https://github.com/jdg/MBProgressHUD" >MBProgressHUD</a>
</p>


<h3>3、fmdb </h3>


<p>SQLite在OC上的封装 github地址：<a href="https://github.com/ccgus/fmdb" >fmdb</a>
</p>


<h3>4、MKInfoPanelDemo</h3>


<p>简单的弹出消息提示github地址：<a href="https://github.com/MugunthKumar/MKInfoPanelDemo" >MKInfoPanelDemo</a>
</p>


<h3>5、FastImageCache</h3>


<p>如它的名字快速图片缓存 github地址：<a href="https://github.com/path/FastImageCache" >FastImageCache</a>
</p>


<h3>6、DACircularProgress</h3>


<p>自定义圆形进度条 github地址：<a href="https://github.com/danielamitay/DACircularProgress" >DACircularProgress</a>
</p>


<h3>7、GPUImage</h3>


<p>使用GPU处理图片，内置很多滤镜效果 github地址：<a href="https://github.com/BradLarson/GPUImage" >GPUImage</a>
</p>


<h3>8、RESideMenu</h3>


<p>类似网易新闻菜单效果 github地址：<a href="https://github.com/romaonthego/RESideMenu" >RESideMenu</a>
</p>


<p>持续更新&#8230;&#8230;</p>


<p></rss></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrew的安装和使用]]></title>
    <link href="http://cloay.com/blog/2013/11/15/homebrewde-an-zhuang-he-shi-yong/"/>
    <updated>2013-11-15T14:33:00+08:00</updated>
    <id>http://cloay.com/blog/2013/11/15/homebrewde-an-zhuang-he-shi-yong</id>
    <content type="html"><![CDATA[<h3>Homebrew 是什么</h3>


<br>


<p>官网是这样说的：<br></p>

<p>在 OS X 中找不到您想要的软件？Homebrew 给你所需。<br>Homebrew 将软件包分装到单独的目录，然后 symlink 到 /usr/local 中。</p>


<!-- more -->


<p>轻松创建您自己的 Homebrew 软件包。
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">brew</span> <span class="n">create</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">foo</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">bar</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="n">tgz</span>
</span><span class='line'><span class="no">Created</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="no">Library</span><span class="o">/</span><span class="no">Formula</span><span class="o">/</span><span class="n">bar</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>
完全基于 git 和 ruby，您可以很方便地撤销、更改或合并上流的更新。</p>


<br>


<h3>安装 Homebrew</h3>


<p>打开 Terminal, 复制并粘贴:</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ruby</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<br>


<h3>Homebrew 使用</h3>


<p>查看寻找自己的包</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">search</span> <span class="sr">//</span><span class="o">+</span><span class="n">keyword</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装包</p>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="sr">//</span> <span class="o">+</span> <span class="err">包名</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git 拉取远程分支到本地]]></title>
    <link href="http://cloay.com/blog/2013/11/13/git-la-qu-yuan-cheng-fen-zhi-dao-ben-di/"/>
    <updated>2013-11-13T11:15:00+08:00</updated>
    <id>http://cloay.com/blog/2013/11/13/git-la-qu-yuan-cheng-fen-zhi-dao-ben-di</id>
    <content type="html"><![CDATA[<pre><code>    git checkout -b newbranch_name --track origin/feature/newbranch_name
</code></pre>

<p>如果遇到类似如下问题：</p>


<pre><code>    fatal: git checkout: updating paths is incompatible with switching branches.
    Did you intend to checkout 'origin/remote-name' which can not be resolved as commit?
</code></pre>

<!-- more -->


<p>使用下面命令</p>


<pre><code>    git remote show origin
    git remote update
    git fetch
</code></pre>

<p>再试试</p>


<pre><code>    git checkout -b local-name origin/remote-name
</code></pre>

<p>参考资料:</p>


<p> <a href = "http://stackoverflow.com/questions/945654/git-checkout-on-a-remote-branch-does-not-work">Git checkout on a remote branch does not work</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AFNetworking的简单使用]]></title>
    <link href="http://cloay.com/blog/2013/11/12/afnetworkingde-jian-dan-shi-yong/"/>
    <updated>2013-11-12T15:01:00+08:00</updated>
    <id>http://cloay.com/blog/2013/11/12/afnetworkingde-jian-dan-shi-yong</id>
    <content type="html"><![CDATA[<p>简单登录使用</p>


<br>


<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">MBProgressHUD</span> <span class="o">*</span><span class="n">hud</span> <span class="o">=</span> <span class="p">[</span><span class="n">MBProgressHUD</span> <span class="nl">showHUDAddedTo:</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">animated:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'><span class="n">hud</span><span class="p">.</span><span class="n">labelText</span> <span class="o">=</span> <span class="s">@&quot;正在登录...&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">//init params</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">parameters</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjects:</span><span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="s">@&quot;login&quot;</span><span class="p">,</span> <span class="n">nameTextField</span><span class="p">.</span><span class="n">text</span><span class="p">,</span> <span class="n">passwordTextField</span><span class="p">.</span><span class="n">text</span><span class="p">,</span> <span class="s">@&quot;anonymous&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">]</span> <span class="nl">forKeys:</span><span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="s">@&quot;cmd&quot;</span><span class="p">,</span> <span class="s">@&quot;login_name&quot;</span><span class="p">,</span> <span class="s">@&quot;password&quot;</span><span class="p">,</span> <span class="s">@&quot;access_token&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'><span class="n">AFHTTPRequestOperationManager</span> <span class="o">*</span><span class="n">manager</span> <span class="o">=</span> <span class="p">[</span><span class="n">AFHTTPRequestOperationManager</span> <span class="n">manager</span><span class="p">];</span>
</span><span class='line'><span class="n">manager</span><span class="p">.</span><span class="n">responseSerializer</span> <span class="o">=</span> <span class="p">[</span><span class="n">AFJSONResponseSerializer</span> <span class="n">serializer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">manager</span><span class="p">.</span><span class="n">responseSerializer</span><span class="p">.</span><span class="n">acceptableContentTypes</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSSet</span> <span class="nl">setWithObject:</span><span class="s">@&quot;text/html&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">DLog</span><span class="p">(</span><span class="s">@&quot;parmeters:%@&quot;</span><span class="p">,</span> <span class="n">parameters</span><span class="p">);</span>
</span><span class='line'><span class="n">AFJSONRequestSerializer</span> <span class="o">*</span><span class="n">jsonSerializer</span> <span class="o">=</span> <span class="p">[</span><span class="n">AFJSONRequestSerializer</span> <span class="nl">serializerWithWritingOptions:</span><span class="n">NSJSONWritingPrettyPrinted</span><span class="p">];</span>
</span><span class='line'><span class="n">manager</span><span class="p">.</span><span class="n">requestSerializer</span> <span class="o">=</span> <span class="n">jsonSerializer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">manager</span> <span class="nl">POST:</span><span class="n">SERVER</span> <span class="nl">parameters:</span><span class="n">parameters</span> <span class="nl">success:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="kt">id</span> <span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">DLog</span><span class="p">(</span><span class="s">@&quot;JSON: %@&quot;</span><span class="p">,</span> <span class="n">responseObject</span><span class="p">);</span>
</span><span class='line'>    <span class="p">[</span><span class="n">MBProgressHUD</span> <span class="nl">hideAllHUDsForView:</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">animated:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">([</span><span class="n">responseObject</span> <span class="nl">objectForKey:</span><span class="s">@&quot;error&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">errorCode</span> <span class="o">=</span> <span class="p">[[</span><span class="n">responseObject</span> <span class="nl">objectForKey:</span><span class="s">@&quot;error_code&quot;</span><span class="p">]</span> <span class="n">integerValue</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">Utils</span> <span class="nl">showErrorMsgWithErrorCode:</span><span class="n">errorCode</span><span class="p">];</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">accountDic</span> <span class="o">=</span> <span class="p">[</span><span class="n">responseObject</span> <span class="nl">objectForKey:</span><span class="s">@&quot;account&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">accountDic</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">appAccount</span> <span class="o">=</span> <span class="p">[</span><span class="n">Account</span> <span class="nl">jsonToAccount:</span><span class="n">responseObject</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">MainVC</span> <span class="o">*</span><span class="n">mainVc</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MainVC</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">navigationController</span> <span class="nl">pushViewController:</span><span class="n">mainVc</span> <span class="nl">animated:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">[</span><span class="n">Utils</span> <span class="nl">HUDShowMsg:</span><span class="p">[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">msg:</span><span class="s">@&quot;登录成功！&quot;</span> <span class="nl">withDelay:</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">Utils</span> <span class="nl">HUDShowMsg:</span><span class="p">[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span> <span class="nl">msg:</span><span class="s">@&quot;登录失败，请稍候重试！&quot;</span> <span class="nl">withDelay:</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">DLog</span><span class="p">(</span><span class="s">@&quot;Error: %@&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'>    <span class="p">[</span><span class="n">MBProgressHUD</span> <span class="nl">hideAllHUDsForView:</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">animated:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">Utils</span> <span class="nl">showErrorMsgWithErrorCode:</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello world !]]></title>
    <link href="http://cloay.com/blog/2013/11/11/hello-world/"/>
    <updated>2013-11-11T18:33:00+08:00</updated>
    <id>http://cloay.com/blog/2013/11/11/hello-world</id>
    <content type="html"><![CDATA[<h2>Hello world !</h2>


<p>This is a test!</p>

]]></content>
  </entry>
  
</feed>
